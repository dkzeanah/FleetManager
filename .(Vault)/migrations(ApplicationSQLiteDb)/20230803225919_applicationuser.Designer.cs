// <auto-generated />
using System;
using BlazorApp1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorApp1.Migrations.ApplicationSQLiteDb
{
    [DbContext(typeof(ApplicationSQLiteDbContext))]
    [Migration("20230803225919_applicationuser")]
    partial class applicationuser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("FriendlyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUserDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("DetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DriverStatsId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TimelineId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserEventsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.HasIndex("DetailId");

                    b.HasIndex("DriverStatsId")
                        .IsUnique();

                    b.ToTable("ApplicationUserDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUserStaticDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpertiseCategory")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VehicleArea")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUserStaticDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Blank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Blanks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Item 1",
                            String = "This is item 1 data"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarDetail")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarStatusId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("Make")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Miles")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SourceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeleGeneration")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarEventDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarEventId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DetailTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CarEventId");

                    b.HasIndex("CarId");

                    b.HasIndex("DetailId");

                    b.ToTable("CarDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarEvent", b =>
                {
                    b.Property<int>("CarEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CarEventId");

                    b.HasIndex("CarId");

                    b.HasIndex("EventId");

                    b.ToTable("CarEvent");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarEventDetail", b =>
                {
                    b.Property<int>("CarEventDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CarDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarEventId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CarEventDetailId");

                    b.HasIndex("CarDetailId");

                    b.HasIndex("CarEventId");

                    b.ToTable("CarEventDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarStaticDetail", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Adas")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Finas")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Vin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CarStaticDetails");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatusId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StatusTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("StatusId");

                    b.ToTable("CarStatus");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DefaultPriority")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("DetailTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("DetailTypeId");

                    b.ToTable("Detail");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Detail");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BlazorApp1.CarModels.DetailType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CarDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarDetailId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("DetailTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ticket"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Car"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Event"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ticket"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Shop"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Highlight"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Improvement"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Critique"
                        },
                        new
                        {
                            Id = 1001,
                            Name = "Detail1"
                        },
                        new
                        {
                            Id = 1002,
                            Name = "Detail2"
                        },
                        new
                        {
                            Id = 1003,
                            Name = "Detail3"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.DriverStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AverageDrivingHours")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("DriverStats");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("EventTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TeamTimelineId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TimelineId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("TeamTimelineId");

                    b.HasIndex("TimelineId");

                    b.HasIndex("UserId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("EventType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Comission"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Decomission"
                        },
                        new
                        {
                            Id = 3,
                            Name = "TicketSubmission"
                        },
                        new
                        {
                            Id = 4,
                            Name = "ErrorIdentification"
                        },
                        new
                        {
                            Id = 5,
                            Name = "TestDrive"
                        },
                        new
                        {
                            Id = 6,
                            Name = "ShopConfiguration"
                        },
                        new
                        {
                            Id = 7,
                            Name = "PreparedForDrive"
                        },
                        new
                        {
                            Id = 8,
                            Name = "TagAssigned"
                        },
                        new
                        {
                            Id = 9,
                            Name = "TagUnAssigned"
                        },
                        new
                        {
                            Id = 10,
                            Name = "LoggerInstall"
                        },
                        new
                        {
                            Id = 11,
                            Name = "LoggerUnInstall"
                        },
                        new
                        {
                            Id = 12,
                            Name = "MainDriveEvent"
                        },
                        new
                        {
                            Id = 13,
                            Name = "RoutineDrive"
                        },
                        new
                        {
                            Id = 1001,
                            Name = "Type1"
                        },
                        new
                        {
                            Id = 1002,
                            Name = "Type2"
                        },
                        new
                        {
                            Id = 1003,
                            Name = "Type3"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ExcelDataRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DataHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ExcelDataRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = "ExampleData",
                            DataHash = "ExampleDataHash",
                            LastModified = new DateTime(2023, 8, 3, 17, 59, 16, 622, DateTimeKind.Local).AddTicks(9912),
                            UploadDate = new DateTime(2023, 8, 3, 17, 59, 16, 622, DateTimeKind.Local).AddTicks(9866)
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ExcelDataRecordChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ColumnName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ExcelDataRecordId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OldValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExcelDataRecordId");

                    b.ToTable("ExcelDataRecordChanges");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Logger", b =>
                {
                    b.Property<int>("LoggerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LogText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LogTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumLoggers")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypeLogger")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoggerId");

                    b.HasIndex("CarId");

                    b.ToTable("Logger");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.MasterLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MasterLog");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Message = "App Birth.",
                            Time = new DateTime(2023, 8, 3, 17, 59, 16, 624, DateTimeKind.Local).AddTicks(92)
                        },
                        new
                        {
                            Id = 2,
                            Message = "Hello from The past.",
                            Time = new DateTime(2023, 8, 3, 17, 59, 16, 624, DateTimeKind.Local).AddTicks(120)
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.NoteAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NoteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NoteId");

                    b.ToTable("NoteAttachment");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.NoteComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("NoteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("NoteId");

                    b.ToTable("NoteComment");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.NoteTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("NoteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NoteId");

                    b.ToTable("NoteTag");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Source", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Source");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "MarketBorrow"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Purchased"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Owned"
                        },
                        new
                        {
                            Id = 1001,
                            Name = "MarketBorrow"
                        },
                        new
                        {
                            Id = 1002,
                            Name = "Owned"
                        },
                        new
                        {
                            Id = 1003,
                            Name = "Purchased"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Available"
                        },
                        new
                        {
                            Id = 2,
                            Name = "NotAvailable"
                        },
                        new
                        {
                            Id = 3,
                            Name = "AwaitingAction"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Unassigned"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adas"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Telematics"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TeamTimeline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.ToTable("TeamTimeline");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Ticket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApplicationUserDetailId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AssigneeId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserDetailId");

                    b.HasIndex("AssigneeId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TicketId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TicketId1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TicketId1");

                    b.ToTable("TicketAttachment");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DefaultPriority")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TicketCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DefaultPriority = 1,
                            Name = "Voca1"
                        },
                        new
                        {
                            Id = 2,
                            DefaultPriority = 2,
                            Name = "Voca2"
                        },
                        new
                        {
                            Id = 3,
                            DefaultPriority = 3,
                            Name = "Voca3"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("TicketId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TicketId1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("TicketId1");

                    b.ToTable("TicketComment");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Change")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ChangedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TicketId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TicketId1")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserDetailId1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("TicketId1");

                    b.HasIndex("UserDetailId1");

                    b.ToTable("TicketHistory");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TicketId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TicketId1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TicketId1");

                    b.ToTable("TicketTag");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Timeline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserDetailId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserDetailId");

                    b.ToTable("Timeline");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApplicationUserDetailId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserEventDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserDetailId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("UserEvent");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEventDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TextId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserEventDetailGrandularId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserEventId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("CarId");

                    b.HasIndex("DetailId");

                    b.HasIndex("EventId");

                    b.HasIndex("UserEventId");

                    b.HasIndex("UserId");

                    b.ToTable("UserEventDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEventDetailText", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserEventDetailId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserEventDetailId");

                    b.ToTable("UserEventDetailText");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEventDetailGranular", b =>
                {
                    b.HasBaseType("BlazorApp1.CarModels.Detail");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserEventDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserEventId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasIndex("UserEventDetailId");

                    b.HasDiscriminator().HasValue("UserEventDetailGranular");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUser", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Team", "Team")
                        .WithMany("TeamMembers")
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUserDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "ApplicationUser")
                        .WithOne("ApplicationUserDetails")
                        .HasForeignKey("BlazorApp1.CarModels.ApplicationUserDetail", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Detail", null)
                        .WithMany("ApplicationUserDetail")
                        .HasForeignKey("DetailId");

                    b.HasOne("BlazorApp1.CarModels.DriverStats", "DriverStats")
                        .WithOne("ApplicationUserDetail")
                        .HasForeignKey("BlazorApp1.CarModels.ApplicationUserDetail", "DriverStatsId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("DriverStats");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUserStaticDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "ApplicationUser")
                        .WithOne("ApplicationUserStaticDetail")
                        .HasForeignKey("BlazorApp1.CarModels.ApplicationUserStaticDetail", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Car", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.CarEvent", "CarEvent")
                        .WithMany()
                        .HasForeignKey("CarEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithMany("CarDetails")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Detail", null)
                        .WithMany("CarDetails")
                        .HasForeignKey("DetailId");

                    b.Navigation("Car");

                    b.Navigation("CarEvent");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarEvent", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Event", "Event")
                        .WithMany("CarEvents")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarEventDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.CarDetail", null)
                        .WithMany("CarEventDetails")
                        .HasForeignKey("CarDetailId");

                    b.HasOne("BlazorApp1.CarModels.CarEvent", "CarEvent")
                        .WithMany("CarEventDetails")
                        .HasForeignKey("CarEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarEvent");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarStaticDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithOne("CarStaticDetail")
                        .HasForeignKey("BlazorApp1.CarModels.CarStaticDetail", "Id");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarStatus", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithMany("CarStatus")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Detail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("BlazorApp1.CarModels.DetailType", "DetailType")
                        .WithMany("Details")
                        .HasForeignKey("DetailTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("DetailType");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.DetailType", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.CarDetail", null)
                        .WithMany("DetailTypes")
                        .HasForeignKey("CarDetailId");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Event", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.EventType", "EventType")
                        .WithMany()
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.TeamTimeline", null)
                        .WithMany("Events")
                        .HasForeignKey("TeamTimelineId");

                    b.HasOne("BlazorApp1.CarModels.Timeline", null)
                        .WithMany("Events")
                        .HasForeignKey("TimelineId");

                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "User")
                        .WithMany("Events")
                        .HasForeignKey("UserId");

                    b.Navigation("Car");

                    b.Navigation("Category");

                    b.Navigation("EventType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ExcelDataRecordChange", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ExcelDataRecord", "ExcelDataRecord")
                        .WithMany("Changes")
                        .HasForeignKey("ExcelDataRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExcelDataRecord");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Logger", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithMany("Loggers")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Note", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.NoteAttachment", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Note", "Note")
                        .WithMany("Attachments")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Note");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.NoteComment", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Note", "Note")
                        .WithMany("Comments")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Note");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.NoteTag", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Note", "Note")
                        .WithMany("Tags")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Note");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TeamTimeline", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Team", "Team")
                        .WithOne("TeamTimeline")
                        .HasForeignKey("BlazorApp1.CarModels.TeamTimeline", "TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Ticket", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUserDetail", null)
                        .WithMany("TicketsAssigned")
                        .HasForeignKey("ApplicationUserDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "Assignee")
                        .WithMany()
                        .HasForeignKey("AssigneeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.ApplicationUserDetail", "ApplicationApplicationUserDetails")
                        .WithMany("TicketsCreated")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationApplicationUserDetails");

                    b.Navigation("Assignee");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketAttachment", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Ticket", "Ticket")
                        .WithMany("Attachments")
                        .HasForeignKey("TicketId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketComment", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Ticket", "Ticket")
                        .WithMany("Comments")
                        .HasForeignKey("TicketId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketHistory", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Ticket", "Ticket")
                        .WithMany("History")
                        .HasForeignKey("TicketId1");

                    b.HasOne("BlazorApp1.CarModels.ApplicationUserDetail", "UserDetail")
                        .WithMany("TicketHistories")
                        .HasForeignKey("UserDetailId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Ticket");

                    b.Navigation("UserDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketTag", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Ticket", "Ticket")
                        .WithMany("Tags")
                        .HasForeignKey("TicketId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Timeline", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUserDetail", "UserDetail")
                        .WithMany("Timelines")
                        .HasForeignKey("UserDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEvent", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUserDetail", "ApplicationUserDetail")
                        .WithMany("UserEvents")
                        .HasForeignKey("ApplicationUserDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", null)
                        .WithMany("UserEvents")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("BlazorApp1.CarModels.Event", "Event")
                        .WithMany("UserEvents")
                        .HasForeignKey("EventId");

                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("ApplicationUserDetail");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEventDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId");

                    b.HasOne("BlazorApp1.CarModels.Detail", null)
                        .WithMany("EventDetails")
                        .HasForeignKey("DetailId");

                    b.HasOne("BlazorApp1.CarModels.Event", null)
                        .WithMany("EventDetails")
                        .HasForeignKey("EventId");

                    b.HasOne("BlazorApp1.CarModels.UserEvent", "UserEvent")
                        .WithMany("UserEventDetails")
                        .HasForeignKey("UserEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Car");

                    b.Navigation("User");

                    b.Navigation("UserEvent");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEventDetailText", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.UserEventDetail", "UserEventDetail")
                        .WithMany("Text")
                        .HasForeignKey("UserEventDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserEventDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEventDetailGranular", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.UserEventDetail", "UserEventDetail")
                        .WithMany("UserEventDetailGranulars")
                        .HasForeignKey("UserEventDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserEventDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUser", b =>
                {
                    b.Navigation("ApplicationUserDetails");

                    b.Navigation("ApplicationUserStaticDetail");

                    b.Navigation("Events");

                    b.Navigation("UserEvents");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUserDetail", b =>
                {
                    b.Navigation("TicketHistories");

                    b.Navigation("TicketsAssigned");

                    b.Navigation("TicketsCreated");

                    b.Navigation("Timelines");

                    b.Navigation("UserEvents");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Car", b =>
                {
                    b.Navigation("CarDetails");

                    b.Navigation("CarStaticDetail");

                    b.Navigation("CarStatus");

                    b.Navigation("Loggers");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarDetail", b =>
                {
                    b.Navigation("CarEventDetails");

                    b.Navigation("DetailTypes");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarEvent", b =>
                {
                    b.Navigation("CarEventDetails");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Detail", b =>
                {
                    b.Navigation("ApplicationUserDetail");

                    b.Navigation("CarDetails");

                    b.Navigation("EventDetails");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.DetailType", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.DriverStats", b =>
                {
                    b.Navigation("ApplicationUserDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Event", b =>
                {
                    b.Navigation("CarEvents");

                    b.Navigation("EventDetails");

                    b.Navigation("UserEvents");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ExcelDataRecord", b =>
                {
                    b.Navigation("Changes");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Note", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Comments");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Team", b =>
                {
                    b.Navigation("TeamMembers");

                    b.Navigation("TeamTimeline")
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TeamTimeline", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Ticket", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Comments");

                    b.Navigation("History");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Timeline", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEvent", b =>
                {
                    b.Navigation("UserEventDetails");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEventDetail", b =>
                {
                    b.Navigation("Text");

                    b.Navigation("UserEventDetailGranulars");
                });
#pragma warning restore 612, 618
        }
    }
}
