// <auto-generated />
using System;
using BlazorApp1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorApp1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230714194621_CarStaticDetail")]
    partial class CarStaticDetail
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("ApplicationUserDetailId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FriendlyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUserDetail", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId");

                    b.ToTable("ApplicationUserDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.BlankModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("BlankModels");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarId"));

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Miles")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("TeleGeneration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.ToTable("Cars", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Car2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarStaticDetailId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Miles")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("TeleGeneration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarStaticDetailId");

                    b.ToTable("Car2s", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            Location = "California",
                            Make = "Mercedes",
                            Miles = 5000,
                            Model = "EQE 400",
                            SourceId = 2,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1002,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 5000,
                            Model = "Maybach GLS 600",
                            SourceId = 1,
                            TeleGeneration = "NTG6",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1003,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 5000,
                            Model = "EQS 450+",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1004,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 5000,
                            Model = "GLS 580 4MATIC",
                            SourceId = 1,
                            TeleGeneration = "NTG7 * 2",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1005,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350 4MATIC",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1006,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 200,
                            Model = "Maybach EQS 680",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1007,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1008,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLS 450 4MATIC",
                            SourceId = 1,
                            TeleGeneration = "NTG7 * 2",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1009,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG EQE 53 4MAT",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1010,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1011,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1012,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "Maybach GLS 600",
                            SourceId = 1,
                            TeleGeneration = "NTG7*2",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1013,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1014,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450 4MATIC",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1015,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLE 400 e 4MATIC",
                            SourceId = 1,
                            TeleGeneration = "NTG7*2",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1016,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "MAYBACH EQS 680",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1017,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG GLE 63 S 4MAT",
                            SourceId = 1,
                            TeleGeneration = "NTG7*2",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1018,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLE 400 e 4MATIC",
                            SourceId = 1,
                            TeleGeneration = "NTG7*2",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1019,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG EQE 53 4MAT",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1020,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1021,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1022,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 5000,
                            Model = "C 300",
                            SourceId = 1,
                            TeleGeneration = "GEN20",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1023,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1024,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG CLA 45",
                            SourceId = 1,
                            TeleGeneration = "NTG7*2",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1025,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450 4MATIC",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1026,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG S 63 e ",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1027,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLC 300",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1028,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1029,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1030,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "Maybach S 580",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1031,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG EQE 53 4MAT",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1032,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQB 350 4MATIC",
                            SourceId = 1,
                            TeleGeneration = "NTG6",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1033,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG S 63 e 4MATIC",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1034,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 550 4MATIC",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1035,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG E 53 4MATIC",
                            SourceId = 1,
                            TeleGeneration = "NTG6",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1036,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "E 350 4MATIC",
                            SourceId = 1,
                            TeleGeneration = "GEN20",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1037,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350 4MATIC",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1038,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        },
                        new
                        {
                            Id = 1039,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350",
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "default",
                            Year = 2023
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarDetail", b =>
                {
                    b.Property<int>("CarDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarDetailId"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DetailId")
                        .HasColumnType("int");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarDetailId");

                    b.HasIndex("CarId");

                    b.HasIndex("DetailId");

                    b.ToTable("CarDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarEvent", b =>
                {
                    b.Property<int>("CarEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarEventId"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.HasKey("CarEventId");

                    b.HasIndex("CarId");

                    b.HasIndex("EventId");

                    b.ToTable("CarEvent");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarEventDetail", b =>
                {
                    b.Property<int>("CarEventDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarEventDetailId"));

                    b.Property<int?>("CarDetailId")
                        .HasColumnType("int");

                    b.Property<int>("CarEventId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarEventDetailId");

                    b.HasIndex("CarDetailId");

                    b.HasIndex("CarEventId");

                    b.ToTable("CarEventDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarStaticDetail", b =>
                {
                    b.Property<int>("CarStaticDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarStaticDetailId"));

                    b.Property<string>("Adas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("Finas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullVin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HarnessStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwareVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VinLast4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarStaticDetailId");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.ToTable("CarStaticDetails");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarStaticDetail2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("Finas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullVin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.ToTable("CarStaticDetail2");

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            Adas = "0",
                            CarId = 1001,
                            Finas = "X294-01019",
                            Tag = "180",
                            Vin = "4JGGM2BB6PA000131"
                        },
                        new
                        {
                            Id = 1002,
                            Adas = "0",
                            CarId = 1002,
                            Finas = "X167-04607",
                            Tag = "181",
                            Vin = "4JGFF8HB5NA357779"
                        },
                        new
                        {
                            Id = 1003,
                            Adas = "0",
                            CarId = 1003,
                            Finas = "X296-01198",
                            Tag = "182",
                            Vin = "4JGDM2DB4RA003435"
                        },
                        new
                        {
                            Id = 1004,
                            Adas = "0",
                            CarId = 1004,
                            Finas = "X167-06625",
                            Tag = "183",
                            Vin = "4JGFF8FE9RA844776"
                        },
                        new
                        {
                            Id = 1005,
                            Adas = "0",
                            CarId = 1005,
                            Finas = "X294-01471",
                            Tag = "184",
                            Vin = "4JGGM1CB8RA000790"
                        },
                        new
                        {
                            Id = 1006,
                            Adas = "0",
                            CarId = 1006,
                            Finas = "Z296-01209",
                            Tag = "185",
                            Vin = "4JGDX5FB2RA003388"
                        },
                        new
                        {
                            Id = 1007,
                            Adas = "0",
                            CarId = 1007,
                            Finas = "X296-01210",
                            Tag = "186",
                            Vin = "4JGDM4EB5RA003437"
                        },
                        new
                        {
                            Id = 1008,
                            Adas = "0",
                            CarId = 1008,
                            Finas = "X167-06656",
                            Tag = "187",
                            Vin = "4JGFF5KE1RA844775"
                        },
                        new
                        {
                            Id = 1009,
                            Adas = "0",
                            CarId = 1009,
                            Finas = "X294-01457",
                            Tag = "188",
                            Vin = "4JGGM5DB8RA001590"
                        },
                        new
                        {
                            Id = 1010,
                            Adas = "0",
                            CarId = 1010,
                            Finas = "X296-00421",
                            Tag = "189",
                            Vin = "4JGDM4EB6PA000351"
                        },
                        new
                        {
                            Id = 1011,
                            Adas = "0",
                            CarId = 1011,
                            Finas = "X296-00395",
                            Tag = "190",
                            Vin = "4JGDM2DB9PA000205"
                        },
                        new
                        {
                            Id = 1012,
                            Adas = "0",
                            CarId = 1012,
                            Finas = "X167-06686",
                            Tag = "191",
                            Vin = "4JGFF8HB1RA844774"
                        },
                        new
                        {
                            Id = 1013,
                            Adas = "0",
                            CarId = 1013,
                            Finas = "X294-01532",
                            Tag = "192",
                            Vin = "4JGGM2BB2RA000792"
                        },
                        new
                        {
                            Id = 1014,
                            Adas = "0",
                            CarId = 1014,
                            Finas = "X296-00702",
                            Tag = "193",
                            Vin = "4JGDM2EB1PU000194"
                        },
                        new
                        {
                            Id = 1015,
                            Adas = "0",
                            CarId = 1015,
                            Finas = "V167-06463",
                            Tag = "195",
                            Vin = "4JGFB4GB3RA809370"
                        },
                        new
                        {
                            Id = 1016,
                            Adas = "0",
                            CarId = 1016,
                            Finas = "Z296-01192",
                            Tag = "196",
                            Vin = "4JGDX5FB9RA003386"
                        },
                        new
                        {
                            Id = 1017,
                            Adas = "0",
                            CarId = 1017,
                            Finas = "C167-06461",
                            Tag = "197",
                            Vin = "4JGFD8KB4RA809371"
                        },
                        new
                        {
                            Id = 1018,
                            Adas = "0",
                            CarId = 1018,
                            Finas = "V167-06567",
                            Tag = "198",
                            Vin = "4JGFB4GB1PA883660"
                        },
                        new
                        {
                            Id = 1019,
                            Adas = "0",
                            CarId = 1019,
                            Finas = "X294-01456",
                            Tag = "199",
                            Vin = "4JGGM5DBXRA001588"
                        },
                        new
                        {
                            Id = 1020,
                            Adas = "0",
                            CarId = 1020,
                            Finas = "X296-00848",
                            Tag = "288",
                            Vin = "4JGDM4EB7PA000701"
                        },
                        new
                        {
                            Id = 1021,
                            Adas = "0",
                            CarId = 1021,
                            Finas = "V297-02377",
                            Tag = "638",
                            Vin = "W1KCG4EB4PA019834"
                        },
                        new
                        {
                            Id = 1022,
                            Adas = "0",
                            CarId = 1022,
                            Finas = "W206-01531",
                            Tag = "651",
                            Vin = "W1KAF4GB9NR000041"
                        },
                        new
                        {
                            Id = 1023,
                            Adas = "0",
                            CarId = 1023,
                            Finas = "V297-01008",
                            Tag = "652",
                            Vin = "W1KCG4EB7NA000823"
                        },
                        new
                        {
                            Id = 1024,
                            Adas = "0",
                            CarId = 1024,
                            Finas = "A118-01377",
                            Tag = "653",
                            Vin = "W1K5J5EB8RN368913"
                        },
                        new
                        {
                            Id = 1025,
                            Adas = "0",
                            CarId = 1025,
                            Finas = "V297-01062",
                            Tag = "654",
                            Vin = "W1KCG2EB8NA003265"
                        },
                        new
                        {
                            Id = 1026,
                            Adas = "0",
                            CarId = 1026,
                            Finas = "V223-05154",
                            Tag = "655",
                            Vin = "W1K6G8CB9RA200096"
                        },
                        new
                        {
                            Id = 1027,
                            Adas = "0",
                            CarId = 1027,
                            Finas = "X254-02459",
                            Tag = "657",
                            Vin = "W1NKM4GB3PF001221"
                        },
                        new
                        {
                            Id = 1028,
                            Adas = "0",
                            CarId = 1028,
                            Finas = "V295-01073",
                            Tag = "658",
                            Vin = "W1KEG2BB5NF000498"
                        },
                        new
                        {
                            Id = 1029,
                            Adas = "0",
                            CarId = 1029,
                            Finas = "V295-01074",
                            Tag = "659",
                            Vin = "W1KEG2BB7NF000499"
                        },
                        new
                        {
                            Id = 1030,
                            Adas = "0",
                            CarId = 1030,
                            Finas = "Z223-05153",
                            Tag = "660",
                            Vin = "W1K6X7GB9RA203259"
                        },
                        new
                        {
                            Id = 1031,
                            Adas = "0",
                            CarId = 1031,
                            Finas = "N295-01333",
                            Tag = "661",
                            Vin = "W1KEG5DB3PF005779"
                        },
                        new
                        {
                            Id = 1032,
                            Adas = "0",
                            CarId = 1032,
                            Finas = "X243-01749",
                            Tag = "662",
                            Vin = "W1N9M1DB3RN027408"
                        },
                        new
                        {
                            Id = 1033,
                            Adas = "0",
                            CarId = 1033,
                            Finas = "V223-04879",
                            Tag = "663",
                            Vin = "W1K6G8CB5PA159432"
                        },
                        new
                        {
                            Id = 1034,
                            Adas = "0",
                            CarId = 1034,
                            Finas = "V297-01298",
                            Tag = "664",
                            Vin = "W1KCG4EB6NA000411"
                        },
                        new
                        {
                            Id = 1035,
                            Adas = "0",
                            CarId = 1035,
                            Finas = "A238-02435",
                            Tag = "665",
                            Vin = "W1K1K6BB7PF185712"
                        },
                        new
                        {
                            Id = 1036,
                            Adas = "0",
                            CarId = 1036,
                            Finas = "W214-01098",
                            Tag = "666",
                            Vin = "W1KLF4HB7RA000650"
                        },
                        new
                        {
                            Id = 1037,
                            Adas = "0",
                            CarId = 1037,
                            Finas = "X294-00461",
                            Tag = "668",
                            Vin = "4JGGM1CB5PA000386"
                        },
                        new
                        {
                            Id = 1038,
                            Adas = "0",
                            CarId = 1038,
                            Finas = "X296-00322",
                            Tag = "669",
                            Vin = "4JGDM2DB2PA000031"
                        },
                        new
                        {
                            Id = 1039,
                            Adas = "0",
                            CarId = 1039,
                            Finas = "V295-00503",
                            Tag = "670",
                            Vin = "W1KEG2BB5PF000620"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarStatus", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("CarID");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<DateTime?>("StatusTime")
                        .HasColumnType("datetime");

                    b.HasIndex("CarId");

                    b.HasIndex("StatusId");

                    b.ToTable("CarStatus", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarStatusNew", b =>
                {
                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StatusId")
                        .HasName("PK__CarStatu__C8EE2043D8294AF0");

                    b.ToTable("CarStatus_New", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DetailTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("DetailTypeId");

                    b.ToTable("Detail");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Detail");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BlazorApp1.CarModels.DetailType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarDetailId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarDetailId");

                    b.ToTable("DetailType");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverId"));

                    b.Property<decimal>("DrivingHours")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DriverId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ErrorLog", b =>
                {
                    b.Property<int>("ErrorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ErrorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ErrorId"));

                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("CarID");

                    b.Property<string>("ErrorDetails")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ErrorNotes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ErrorPriority")
                        .HasColumnType("int");

                    b.HasKey("ErrorId")
                        .HasName("PK__ErrorLog__358565CA8BB277F2");

                    b.HasIndex(new[] { "CarId" }, "IDX_ErrorLog_CarID");

                    b.ToTable("ErrorLog", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("CarId");

                    b.Property<double>("Category")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int>("EventTypeId")
                        .HasColumnType("int")
                        .HasColumnName("EventTypeId");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("UserId");

                    b.HasKey("Id")
                        .HasName("PK__Event__7944C870D4DB1DAC");

                    b.HasIndex(new[] { "CarId" }, "IdX_Event_CarId");

                    b.HasIndex(new[] { "EventTypeId" }, "IdX_Event_EventTypeId");

                    b.HasIndex(new[] { "UserId" }, "IdX_Event_UserId");

                    b.ToTable("Event", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.EventDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("DetailId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DetailId");

                    b.HasIndex("EventId");

                    b.ToTable("EventDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.EventType", b =>
                {
                    b.Property<int>("EventTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventTypeId"));

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EventTypeId")
                        .HasName("PK__EventTyp__A9216B1F734774DB");

                    b.ToTable("EventType", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Issue", b =>
                {
                    b.Property<int>("IssueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IssueId"));

                    b.Property<string>("AssignedTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedByUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubmittedAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubmittedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("System")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IssueId");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("LogMessage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("LogTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("LogId")
                        .HasName("PK__Log__5E5499A88878D432");

                    b.ToTable("Log", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Logger", b =>
                {
                    b.Property<int>("LoggerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LoggerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoggerId"));

                    b.Property<int?>("Car2Id")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("CarID");

                    b.Property<int>("NumLoggers")
                        .HasColumnType("int");

                    b.Property<string>("TypeLogger")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LoggerId")
                        .HasName("PK__Logger__0ABCCA66A1861B17");

                    b.HasIndex("Car2Id");

                    b.HasIndex("CarId");

                    b.ToTable("Logger", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.RoleEventMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DefaultEventTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Role")
                        .IsUnique()
                        .HasFilter("[Role] IS NOT NULL");

                    b.ToTable("RoleEventMappings");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Software", b =>
                {
                    b.Property<int>("SoftwareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SoftwareID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareId"));

                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("CarID");

                    b.Property<string>("HeadUnit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NextSoftwareVersion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SoftwareVersion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SoftwareId")
                        .HasName("PK__Software__25EDB8DCFDCE01A5");

                    b.HasIndex(new[] { "CarId" }, "IDX_Software_CarID");

                    b.ToTable("Software", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Source", b =>
                {
                    b.Property<int?>("SourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SourceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("SourceId"));

                    b.Property<string>("SourceName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SourceId")
                        .HasName("PK__Source__16E019F99EE16562");

                    b.ToTable("Source", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StatusId")
                        .HasName("PK__Status__C8EE2043906DCC08");

                    b.HasIndex(new[] { "StatusName" }, "UQ_StatusName")
                        .IsUnique();

                    b.ToTable("Status", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TempErrorLog", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("CarID");

                    b.Property<string>("ErrorDetails")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ErrorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ErrorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ErrorId"));

                    b.Property<string>("ErrorNotes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ErrorPriority")
                        .HasColumnType("int");

                    b.ToTable("Temp_ErrorLog", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TempEvent", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("CarID");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EventID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<int>("EventTypeId")
                        .HasColumnType("int")
                        .HasColumnName("EventTypeID");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.ToTable("Temp_Event", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TempLogger", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("CarID");

                    b.Property<int>("LoggerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LoggerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoggerId"));

                    b.Property<int>("NumLoggers")
                        .HasColumnType("int");

                    b.Property<string>("TypeLogger")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("Temp_Logger", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TempRepair", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("CarID");

                    b.Property<string>("RepairDetails")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("RepairEnd")
                        .HasColumnType("datetime");

                    b.Property<int>("RepairId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RepairID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepairId"));

                    b.Property<DateTime>("RepairStart")
                        .HasColumnType("datetime");

                    b.Property<int>("TechnicianId")
                        .HasColumnType("int")
                        .HasColumnName("TechnicianID");

                    b.ToTable("Temp_Repair", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TempSoftware", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("CarID");

                    b.Property<string>("HeadUnit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NextSoftwareVersion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SoftwareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SoftwareID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftwareId"));

                    b.Property<string>("SoftwareVersion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("Temp_Software", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssigneeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssigneeId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketAttachment");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketComment");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Change")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChangedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketHistory");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketTag");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DetailId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("DetailId");

                    b.ToTable("UserDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEvent", b =>
                {
                    b.Property<int>("UserEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserEventId"));

                    b.Property<int?>("EventId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserEventId");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("UserEvents");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<string>", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEventDetail", b =>
                {
                    b.HasBaseType("BlazorApp1.CarModels.Detail");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserEventDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("UserEventId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("UserEventDetailId");

                    b.HasDiscriminator().HasValue("UserEventDetail");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole<string>");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.NoteEventDetail", b =>
                {
                    b.HasBaseType("BlazorApp1.CarModels.UserEventDetail");

                    b.HasDiscriminator().HasValue("NoteEventDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUserDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "ApplicationUser")
                        .WithOne("ApplicationUserDetail")
                        .HasForeignKey("BlazorApp1.CarModels.ApplicationUserDetail", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Car2", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.CarStaticDetail", "CarStaticDetail")
                        .WithMany()
                        .HasForeignKey("CarStaticDetailId");

                    b.Navigation("CarStaticDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Detail", null)
                        .WithMany("CarDetails")
                        .HasForeignKey("DetailId");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarEvent", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarEventDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.CarDetail", null)
                        .WithMany("CarEventDetails")
                        .HasForeignKey("CarDetailId");

                    b.HasOne("BlazorApp1.CarModels.CarEvent", "CarEvent")
                        .WithMany("CarEventDetails")
                        .HasForeignKey("CarEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarEvent");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarStaticDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithOne("CarStaticDetail")
                        .HasForeignKey("BlazorApp1.CarModels.CarStaticDetail", "CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarStaticDetail2", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithOne()
                        .HasForeignKey("BlazorApp1.CarModels.CarStaticDetail2", "CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarStatus", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .IsRequired()
                        .HasConstraintName("FK__CarStatus__CarID__498EEC8D");

                    b.HasOne("BlazorApp1.CarModels.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK__CarStatus__Statu__4A8310C6");

                    b.Navigation("Car");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Detail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("BlazorApp1.CarModels.DetailType", "DetailType")
                        .WithMany("Details")
                        .HasForeignKey("DetailTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("DetailType");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.DetailType", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.CarDetail", null)
                        .WithMany("DetailTypes")
                        .HasForeignKey("CarDetailId");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Event", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.EventType", "EventType")
                        .WithMany("Events")
                        .HasForeignKey("EventTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Event__EventType__1CBC4616");

                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "User")
                        .WithMany("Events")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.EventDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Detail", null)
                        .WithMany("EventDetails")
                        .HasForeignKey("DetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Event", "Event")
                        .WithMany("EventDetails")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Logger", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Car2", null)
                        .WithMany("Loggers")
                        .HasForeignKey("Car2Id");

                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithMany("Loggers")
                        .HasForeignKey("CarId")
                        .IsRequired()
                        .HasConstraintName("FK__Logger__CarID__5224328E");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Ticket", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "Assignee")
                        .WithMany()
                        .HasForeignKey("AssigneeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignee");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketAttachment", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Ticket", "Ticket")
                        .WithMany("Attachments")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketComment", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Ticket", "Ticket")
                        .WithMany("Comments")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketHistory", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Ticket", "Ticket")
                        .WithMany("History")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangedBy");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketTag", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Ticket", "Ticket")
                        .WithMany("Tags")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", null)
                        .WithMany("UserDetails")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("BlazorApp1.CarModels.Detail", null)
                        .WithMany("UserDetails")
                        .HasForeignKey("DetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEvent", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Event", "Event")
                        .WithMany("UserEvents")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "ApplicationUser")
                        .WithMany("UserEvents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEventDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.UserEvent", "UserEvent")
                        .WithMany("UserEventDetails")
                        .HasForeignKey("UserEventDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserEvent");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<string>", null)
                        .WithOne()
                        .HasForeignKey("Microsoft.AspNetCore.Identity.IdentityRole", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUser", b =>
                {
                    b.Navigation("ApplicationUserDetail");

                    b.Navigation("Events");

                    b.Navigation("UserDetails");

                    b.Navigation("UserEvents");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Car", b =>
                {
                    b.Navigation("CarStaticDetail");

                    b.Navigation("Loggers");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Car2", b =>
                {
                    b.Navigation("Loggers");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarDetail", b =>
                {
                    b.Navigation("CarEventDetails");

                    b.Navigation("DetailTypes");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarEvent", b =>
                {
                    b.Navigation("CarEventDetails");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Detail", b =>
                {
                    b.Navigation("CarDetails");

                    b.Navigation("EventDetails");

                    b.Navigation("UserDetails");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.DetailType", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Event", b =>
                {
                    b.Navigation("EventDetails");

                    b.Navigation("UserEvents");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.EventType", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Ticket", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Comments");

                    b.Navigation("History");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEvent", b =>
                {
                    b.Navigation("UserEventDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
