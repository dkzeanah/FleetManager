@page "/"
@namespace BlazorApp1.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = "_Layout";
}

@*<component type="typeof(App)" render-mode="Server" />
*@
<component type="typeof(App)" render-mode="ServerPrerendered" />


<script>
    function showModal() {
        document.getElementById("userNotFoundModal").style.display = "block";
    }

    function hideModal() {
        document.getElementById("userNotFoundModal").style.display = "none";
    }
</script>

@*<script>
    window.downloadFile = (filename, data) => {
        // Create an invisible A element
        const a = document.createElement("a");
        a.style.display = "none";
        document.body.appendChild(a);

        // Set the HREF to a Blob representation of the data to be downloaded
        a.href = window.URL.createObjectURL(
            new Blob([data], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" })
        );

        // Use download attribute to set set desired file name
        a.setAttribute("download", filename);

        // Trigger the download by simulating click
        a.click();

        // Cleanup
        window.URL.revokeObjectURL(a.href);
        document.body.removeChild(a);
    };
</script>
*@

@*libs first*@
@*<script src="https://cdnjs.cloudflare.com/ajax/libs/interact.js/1.10.11/interact.min.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>*@

@*custom*@



@*<script src="https://cdn.interactjs.io/v1.10.11/interactjs/index.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>

<script src="~/interactFunctions.js"></script>


<script src="https://cdn.interactjs.io/v1.10.11/interact.min.js"></script>
>*@
    <script src="~/custom.js" type="module" defer></script>


@*In this JavaScript code, the showModal function is called from the Blazor component to display the modal by setting its display style property to "block". The hideModal function is called when the user clicks the close button to hide the modal by setting its display style property to "none".
With these changes, when the user variable is null in your Razor file, the UserNotFoundPopup component will be rendered, and the JavaScript code will show the modal to display the user not found message.
*@






