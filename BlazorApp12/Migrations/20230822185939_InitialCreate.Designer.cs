// <auto-generated />
using System;
using BlazorApp1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorApp1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230822185939_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationUserUserCarEvent", b =>
                {
                    b.Property<string>("ApplicationUsersId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UserCarEventsId")
                        .HasColumnType("int");

                    b.HasKey("ApplicationUsersId", "UserCarEventsId");

                    b.HasIndex("UserCarEventsId");

                    b.ToTable("ApplicationUserUserCarEvent");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FriendlyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("TeamId");

                    b.ToTable("ApplicationUser", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUserDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("DriverStatsId")
                        .HasColumnType("int");

                    b.Property<int?>("TimelineId")
                        .HasColumnType("int");

                    b.Property<int>("UserEventsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .IsUnique();

                    b.HasIndex("DriverStatsId")
                        .IsUnique()
                        .HasFilter("[DriverStatsId] IS NOT NULL");

                    b.ToTable("ApplicationUserDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Blank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("String")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Blanks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Item 1",
                            String = "This is item 1 data"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Adas")
                        .HasColumnType("bit");

                    b.Property<int>("CarDetail")
                        .HasColumnType("int");

                    b.Property<int>("CarStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Finas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Miles")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("Tagnumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeleGeneration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Car", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "  X294-01019",
                            Location = "California",
                            Make = "Mercedes",
                            Miles = 5000,
                            Model = "EQE 400",
                            SourceId = 2,
                            Tagnumber = "180",
                            TeleGeneration = "NTG7",
                            UserId = "d02a99db-8c5a-4e0f-9d01-1da28abf91a4",
                            Vin = "4JGGM2BB6PA000131",
                            Year = 2023
                        },
                        new
                        {
                            Id = 2,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "X167-04607",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "Maybach GLS 600",
                            SourceId = 2,
                            Tagnumber = " 181",
                            TeleGeneration = "NTG6",
                            UserId = "d02a99db-8c5a-4e0f-9d01-1da28abf91a4",
                            Vin = "4JGFF8HB5NA357779",
                            Year = 2023
                        },
                        new
                        {
                            Id = 3,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "X296-01198",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450+",
                            SourceId = 2,
                            Tagnumber = " 182",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM2DB4RA003435",
                            Year = 2025
                        },
                        new
                        {
                            Id = 4,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "X167-06625",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLS 580 4matic",
                            SourceId = 2,
                            Tagnumber = " 183",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGFF8FE9RA844776",
                            Year = 2025
                        },
                        new
                        {
                            Id = 5,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "X294-01471",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350 4matic",
                            SourceId = 2,
                            Tagnumber = " 184",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGGM1CB8RA000790",
                            Year = 2025
                        },
                        new
                        {
                            Id = 6,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "Z296-01209",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "Maybach EQS 680",
                            SourceId = 2,
                            Tagnumber = " 185",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDX5FB2RA003388",
                            Year = 2025
                        },
                        new
                        {
                            Id = 7,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "X296-01210",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 186",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM4EB5RA003437",
                            Year = 2025
                        },
                        new
                        {
                            Id = 8,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "X167-06656",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLS 450 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 187",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGFF5KE1RA844775",
                            Year = 2025
                        },
                        new
                        {
                            Id = 9,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "X294-01457",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG EQE 53 4MAT",
                            SourceId = 2,
                            Tagnumber = " 188",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGGM5DB8RA001590",
                            Year = 2025
                        },
                        new
                        {
                            Id = 10,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "X296-00421",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 189",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM4EB6PA000351",
                            Year = 2025
                        },
                        new
                        {
                            Id = 11,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "X296-00395",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450",
                            SourceId = 2,
                            Tagnumber = " 190",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM2DB9PA000205",
                            Year = 2025
                        },
                        new
                        {
                            Id = 12,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "X167-06686",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "Maybach GLS 600",
                            SourceId = 2,
                            Tagnumber = " 191",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGFF8HB1RA844774",
                            Year = 2025
                        },
                        new
                        {
                            Id = 13,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "X294-01532",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350+",
                            SourceId = 2,
                            Tagnumber = " 192",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGGM2BB2RA000792",
                            Year = 2025
                        },
                        new
                        {
                            Id = 14,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "X296-00702",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 193",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM2EB1PU000194",
                            Year = 2025
                        },
                        new
                        {
                            Id = 15,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "V167-06463",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLE 400 e 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 195",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGFB4GB3RA809370",
                            Year = 2025
                        },
                        new
                        {
                            Id = 16,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "Z296-01192",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "MAYBACH EQS 680",
                            SourceId = 2,
                            Tagnumber = " 196",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDX5FB9RA003386",
                            Year = 2025
                        },
                        new
                        {
                            Id = 17,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "C167-06461",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG GLE 63 S 4MAT",
                            SourceId = 2,
                            Tagnumber = " 197",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGFD8KB4RA809371",
                            Year = 2025
                        },
                        new
                        {
                            Id = 18,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "V167-06567",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLE 400 e 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 198",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGFB4GB1PA883660",
                            Year = 2025
                        },
                        new
                        {
                            Id = 19,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "X294-01456",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG EQE 53 4MAT",
                            SourceId = 2,
                            Tagnumber = " 199",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGGM5DBXRA001588",
                            Year = 2025
                        },
                        new
                        {
                            Id = 20,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "X296-00848",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 288",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM4EB7PA000701",
                            Year = 2025
                        },
                        new
                        {
                            Id = 21,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "V297-02377",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 638",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KCG4EB4PA019834",
                            Year = 2025
                        },
                        new
                        {
                            Id = 22,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "W206-01531",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "C 300",
                            SourceId = 2,
                            Tagnumber = " 651",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KAF4GB9NR000041",
                            Year = 2025
                        },
                        new
                        {
                            Id = 23,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "V297-01008",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 652",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KCG4EB7NA000823",
                            Year = 2025
                        },
                        new
                        {
                            Id = 24,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "A118-01377",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG CLA 45 ",
                            SourceId = 2,
                            Tagnumber = " 653",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1K5J5EB8RN368913",
                            Year = 2025
                        },
                        new
                        {
                            Id = 25,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "V297-01062",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 654",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KCG2EB8NA003265",
                            Year = 2025
                        },
                        new
                        {
                            Id = 26,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "V223-05154",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG S 63 e ",
                            SourceId = 2,
                            Tagnumber = " 655",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1K6G8CB9RA200096",
                            Year = 2025
                        },
                        new
                        {
                            Id = 27,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "X254-02459",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLC 300",
                            SourceId = 2,
                            Tagnumber = " 657",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1NKM4GB3PF001221",
                            Year = 2025
                        },
                        new
                        {
                            Id = 28,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "V295-01073",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350+",
                            SourceId = 2,
                            Tagnumber = " 658",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KEG2BB5NF000498",
                            Year = 2025
                        },
                        new
                        {
                            Id = 29,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "V295-01074",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350+",
                            SourceId = 2,
                            Tagnumber = " 659",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KEG2BB7NF000499",
                            Year = 2025
                        },
                        new
                        {
                            Id = 30,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "Z223-05153",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "Maybach S 580",
                            SourceId = 2,
                            Tagnumber = " 660",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1K6X7GB9RA203259",
                            Year = 2025
                        },
                        new
                        {
                            Id = 31,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "N295-01333",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG EQE 53 4MAT",
                            SourceId = 2,
                            Tagnumber = " 661",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KEG5DB3PF005779",
                            Year = 2025
                        },
                        new
                        {
                            Id = 32,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "X243-01749",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQB 350 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 662",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1N9M1DB3RN027408",
                            Year = 2025
                        },
                        new
                        {
                            Id = 33,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "V223-04879",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG S 63 e 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 663",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1K6G8CB5PA159432",
                            Year = 2025
                        },
                        new
                        {
                            Id = 34,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "V297-01298",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 550 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 664",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KCG4EB6NA000411",
                            Year = 2025
                        },
                        new
                        {
                            Id = 35,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "A238-02435",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG E 53 4MATIC+",
                            SourceId = 2,
                            Tagnumber = " 665",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1K1K6BB7PF185712",
                            Year = 2025
                        },
                        new
                        {
                            Id = 36,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "W214-01098",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "E 350 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 666",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KLF4HB7RA000650",
                            Year = 2025
                        },
                        new
                        {
                            Id = 37,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "X294-00461",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 668",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGGM1CB5PA000386",
                            Year = 2025
                        },
                        new
                        {
                            Id = 38,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "X296-00322",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450",
                            SourceId = 2,
                            Tagnumber = " 669",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM2DB2PA000031",
                            Year = 2025
                        },
                        new
                        {
                            Id = 39,
                            Adas = true,
                            CarDetail = 0,
                            CarStatusId = 0,
                            Finas = "V295-00503",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350+",
                            SourceId = 2,
                            Tagnumber = "670",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KEG2BB5PF000620",
                            Year = 2025
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarEventDetailId")
                        .HasColumnType("int");

                    b.Property<int>("CarEventId")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("DetailTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarEventId");

                    b.HasIndex("CarId");

                    b.ToTable("CarDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarEvent", b =>
                {
                    b.Property<int>("CarEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarEventId"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("UserCarEventId")
                        .HasColumnType("int");

                    b.HasKey("CarEventId");

                    b.HasIndex("CarId");

                    b.HasIndex("UserCarEventId");

                    b.ToTable("CarEvent");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarEventDetail", b =>
                {
                    b.Property<int>("CarEventDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarEventDetailId"));

                    b.Property<int?>("CarDetailId")
                        .HasColumnType("int");

                    b.Property<int>("CarEventId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarEventDetailId");

                    b.HasIndex("CarDetailId");

                    b.HasIndex("CarEventId");

                    b.ToTable("CarEventDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.DetailType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarDetailId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CarDetailId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("DetailTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ticket"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Car"
                        },
                        new
                        {
                            Id = 3,
                            Name = "UserCarEvent"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Critique"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Shop"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Highlight"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Improvement"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.DriverStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AverageDrivingHours")
                        .HasColumnType("int");

                    b.Property<int>("TotalCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DriverStats");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserEventId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Events", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("EventTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Comission"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Decomission"
                        },
                        new
                        {
                            Id = 3,
                            Name = "TicketSubmission"
                        },
                        new
                        {
                            Id = 4,
                            Name = "ErrorIdentification"
                        },
                        new
                        {
                            Id = 5,
                            Name = "TestDrive"
                        },
                        new
                        {
                            Id = 6,
                            Name = "ShopConfiguration"
                        },
                        new
                        {
                            Id = 7,
                            Name = "PreparedForDrive"
                        },
                        new
                        {
                            Id = 8,
                            Name = "TagAssigned"
                        },
                        new
                        {
                            Id = 9,
                            Name = "TagUnAssigned"
                        },
                        new
                        {
                            Id = 10,
                            Name = "LoggerInstall"
                        },
                        new
                        {
                            Id = 11,
                            Name = "LoggerUnInstall"
                        },
                        new
                        {
                            Id = 12,
                            Name = "MainDriveEvent"
                        },
                        new
                        {
                            Id = 13,
                            Name = "RoutineDrive"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ExcelDataRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExcelDataRecords");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ExcelDataRecordAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExcelDataRecordId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExcelDataRecordId");

                    b.ToTable("ExcelDataRecordAttribute");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ExcelDataRecordChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ColumnName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExcelDataRecordId")
                        .HasColumnType("int");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExcelDataRecordId");

                    b.ToTable("ExcelDataRecordChange");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("Time")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Log", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.MasterLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MasterLogs");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.RoleEventMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DefaultEventTypeId")
                        .HasColumnType("int");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId")
                        .IsUnique();

                    b.ToTable("RoleEventMappings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DefaultEventTypeId = 1,
                            RoleId = "1"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Source", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("Source");

                    b.ToTable("Source", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "MarketBorrow"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Purchased"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Owned"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Status", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("StatusId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("Status");

                    b.ToTable("Status", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Available"
                        },
                        new
                        {
                            Id = 2,
                            Name = "NotAvailable"
                        },
                        new
                        {
                            Id = 3,
                            Name = "AwaitingAction"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Unassigned"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adas"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Telematics"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TeamTimeline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.ToTable("TeamTimeline");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DefaultPriority")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TicketCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DefaultPriority = 1,
                            Name = "Voca1"
                        },
                        new
                        {
                            Id = 2,
                            DefaultPriority = 2,
                            Name = "Voca2"
                        },
                        new
                        {
                            Id = 3,
                            DefaultPriority = 3,
                            Name = "Voca3"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Timeline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserDetailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserDetailId");

                    b.ToTable("Timeline");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserCarEvent", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TeamTimelineId")
                        .HasColumnType("int");

                    b.Property<int?>("TimelineId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("TeamTimelineId");

                    b.HasIndex("TimelineId");

                    b.ToTable("UserCarEvents");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApplicationUserDetailId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserDetailId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserCarEventId")
                        .HasColumnType("int");

                    b.Property<int?>("UserEventDetailId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserDetailId1");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("EventId");

                    b.ToTable("UserEvents");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEventDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Information")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserEventDetailGrandularId")
                        .HasColumnType("int");

                    b.Property<int?>("UserEventId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("CarId");

                    b.HasIndex("UserEventId");

                    b.ToTable("UserEventDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEventDetailText", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserEventDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserEventDetailId");

                    b.ToTable("UserEventDetailText");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<string>", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole<string>");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ApplicationUserUserCarEvent", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("ApplicationUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.UserCarEvent", null)
                        .WithMany()
                        .HasForeignKey("UserCarEventsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUser", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Event", null)
                        .WithMany("ApplicationUsers")
                        .HasForeignKey("EventId");

                    b.HasOne("BlazorApp1.CarModels.Team", "Team")
                        .WithMany("TeamMembers")
                        .HasForeignKey("TeamId");

                    b.OwnsOne("BlazorApp1.CarModels.ApplicationUserStaticDetail", "ApplicationUserStaticDetail", b1 =>
                        {
                            b1.Property<string>("Id")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("ApplicationUserId")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("ExpertiseCategory")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PhoneNumber")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("VehicleArea")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Id");

                            b1.HasIndex("ApplicationUserId")
                                .IsUnique();

                            b1.ToTable("ApplicationUserStaticDetail", (string)null);

                            b1.WithOwner("ApplicationUser")
                                .HasForeignKey("ApplicationUserId");

                            b1.Navigation("ApplicationUser");
                        });

                    b.Navigation("ApplicationUserStaticDetail");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUserDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "ApplicationUser")
                        .WithOne("ApplicationUserDetails")
                        .HasForeignKey("BlazorApp1.CarModels.ApplicationUserDetail", "ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.DriverStats", "DriverStats")
                        .WithOne("ApplicationUserDetail")
                        .HasForeignKey("BlazorApp1.CarModels.ApplicationUserDetail", "DriverStatsId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("DriverStats");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Car", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.OwnsOne("BlazorApp1.CarModels.CarStaticDetail", "CarStaticDetail", b1 =>
                        {
                            b1.Property<int?>("CarId")
                                .HasColumnType("int");

                            b1.Property<bool?>("Adas")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bit")
                                .HasDefaultValueSql("(1)");

                            b1.Property<string>("Finas")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<string>("Tag")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Vin")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CarId");

                            b1.ToTable("CarStaticDetail", (string)null);

                            b1.WithOwner("Car")
                                .HasForeignKey("CarId");

                            b1.Navigation("Car");
                        });

                    b.OwnsMany("BlazorApp1.CarModels.CarStatus", "CarStatus", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int>("CarId")
                                .HasColumnType("int")
                                .HasColumnName("CarId");

                            b1.Property<int>("StatusId")
                                .HasColumnType("int")
                                .HasColumnName("StatusId");

                            b1.Property<DateTime?>("StatusTime")
                                .HasColumnType("datetime");

                            b1.HasKey("Id");

                            b1.HasIndex("CarId");

                            b1.HasIndex("StatusId");

                            b1.ToTable("CarStatus");

                            b1.WithOwner("Car")
                                .HasForeignKey("CarId");

                            b1.HasOne("BlazorApp1.CarModels.Status", "Status")
                                .WithMany()
                                .HasForeignKey("StatusId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.Navigation("Car");

                            b1.Navigation("Status");
                        });

                    b.OwnsMany("BlazorApp1.CarModels.Logger", "Loggers", b1 =>
                        {
                            b1.Property<int>("CarId")
                                .HasColumnType("int")
                                .HasColumnName("CardId");

                            b1.Property<int>("LoggerId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasColumnName("LoggerId");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("LoggerId"));

                            b1.Property<string>("LogText")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("LogTime")
                                .HasColumnType("datetime2");

                            b1.Property<int>("NumLoggers")
                                .HasColumnType("int");

                            b1.Property<string>("TypeLogger")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.HasKey("CarId", "LoggerId");

                            b1.ToTable("Loggers");

                            b1.WithOwner("Car")
                                .HasForeignKey("CarId");

                            b1.Navigation("Car");
                        });

                    b.Navigation("CarStaticDetail");

                    b.Navigation("CarStatus");

                    b.Navigation("Loggers");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.CarEvent", "CarEvent")
                        .WithMany()
                        .HasForeignKey("CarEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithMany("CarDetails")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("CarEvent");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarEvent", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.UserCarEvent", "UserCarEvent")
                        .WithMany()
                        .HasForeignKey("UserCarEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("UserCarEvent");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarEventDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.CarDetail", null)
                        .WithMany("CarEventDetails")
                        .HasForeignKey("CarDetailId");

                    b.HasOne("BlazorApp1.CarModels.CarEvent", "CarEvent")
                        .WithMany("CarEventDetails")
                        .HasForeignKey("CarEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarEvent");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.DetailType", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.CarDetail", null)
                        .WithMany("DetailTypes")
                        .HasForeignKey("CarDetailId");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ExcelDataRecordAttribute", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ExcelDataRecord", "ExcelDataRecord")
                        .WithMany("Attributes")
                        .HasForeignKey("ExcelDataRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExcelDataRecord");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ExcelDataRecordChange", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ExcelDataRecord", "ExcelDataRecord")
                        .WithMany("Changes")
                        .HasForeignKey("ExcelDataRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExcelDataRecord");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Order", b =>
                {
                    b.OwnsOne("BlazorApp1.CarModels.ShippingInfo", "ShippingInfo", b1 =>
                        {
                            b1.Property<int>("OrderId")
                                .HasColumnType("int");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.ToJson("ShippingInfo");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");

                            b1.OwnsMany("BlazorApp1.CarModels.Delivery", "Deliveries", b2 =>
                                {
                                    b2.Property<int>("ShippingInfoOrderId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    b2.Property<DateTime>("DeliveryDate")
                                        .HasColumnType("datetime2");

                                    b2.Property<string>("ReceiverName")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Signature")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ShippingInfoOrderId", "Id");

                                    b2.ToTable("Orders");

                                    b2.WithOwner()
                                        .HasForeignKey("ShippingInfoOrderId");
                                });

                            b1.OwnsMany("BlazorApp1.CarModels.Shipment", "Shipments", b2 =>
                                {
                                    b2.Property<int>("ShippingInfoOrderId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    b2.Property<string>("Carrier")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<DateTime>("ShipDate")
                                        .HasColumnType("datetime2");

                                    b2.Property<string>("TrackingNumber")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ShippingInfoOrderId", "Id");

                                    b2.ToTable("Orders");

                                    b2.WithOwner()
                                        .HasForeignKey("ShippingInfoOrderId");
                                });

                            b1.Navigation("Deliveries");

                            b1.Navigation("Shipments");
                        });

                    b.Navigation("ShippingInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TeamTimeline", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Team", "Team")
                        .WithOne("TeamTimeline")
                        .HasForeignKey("BlazorApp1.CarModels.TeamTimeline", "TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Timeline", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUserDetail", "ApplicationUserDetail")
                        .WithMany("Timelines")
                        .HasForeignKey("ApplicationUserDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUserDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserCarEvent", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.EventType", "EventType")
                        .WithMany()
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.UserEvent", "UserEvents")
                        .WithOne("UserCarEvent")
                        .HasForeignKey("BlazorApp1.CarModels.UserCarEvent", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.TeamTimeline", null)
                        .WithMany("Events")
                        .HasForeignKey("TeamTimelineId");

                    b.HasOne("BlazorApp1.CarModels.Timeline", null)
                        .WithMany("Events")
                        .HasForeignKey("TimelineId");

                    b.Navigation("EventType");

                    b.Navigation("UserEvents");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEvent", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUserDetail", "ApplicationUserDetail")
                        .WithMany("UserEvents")
                        .HasForeignKey("ApplicationUserDetailId1");

                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "ApplicationUser")
                        .WithMany("UserEvents")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BlazorApp1.CarModels.Event", null)
                        .WithMany("UserEvents")
                        .HasForeignKey("EventId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("ApplicationUserDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEventDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId");

                    b.HasOne("BlazorApp1.CarModels.UserEvent", "UserEvent")
                        .WithMany("UserEventDetails")
                        .HasForeignKey("UserEventId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("Car");

                    b.Navigation("UserEvent");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEventDetailText", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.UserEventDetail", "UserEventDetail")
                        .WithMany("Text")
                        .HasForeignKey("UserEventDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserEventDetail");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<string>", null)
                        .WithOne()
                        .HasForeignKey("Microsoft.AspNetCore.Identity.IdentityRole", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUser", b =>
                {
                    b.Navigation("ApplicationUserDetails");

                    b.Navigation("UserEvents");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUserDetail", b =>
                {
                    b.Navigation("Timelines");

                    b.Navigation("UserEvents");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Car", b =>
                {
                    b.Navigation("CarDetails");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarDetail", b =>
                {
                    b.Navigation("CarEventDetails");

                    b.Navigation("DetailTypes");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarEvent", b =>
                {
                    b.Navigation("CarEventDetails");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.DriverStats", b =>
                {
                    b.Navigation("ApplicationUserDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Event", b =>
                {
                    b.Navigation("ApplicationUsers");

                    b.Navigation("UserEvents");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ExcelDataRecord", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Changes");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Team", b =>
                {
                    b.Navigation("TeamMembers");

                    b.Navigation("TeamTimeline")
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TeamTimeline", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Timeline", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEvent", b =>
                {
                    b.Navigation("UserCarEvent");

                    b.Navigation("UserEventDetails");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEventDetail", b =>
                {
                    b.Navigation("Text");
                });
#pragma warning restore 612, 618
        }
    }
}
