// <auto-generated />
using System;
using BlazorApp1.Data.Sqlite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorApp1.Migrations.ApplicationSqliteDb
{
    [DbContext(typeof(ApplicationSqliteDbContext))]
    [Migration("20240105195004_r1")]
    partial class r1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("FriendlyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TeamTypesTeamTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TestReleaseId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserCarEventId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserEventId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("TeamTypesTeamTypeId");

                    b.HasIndex("TestReleaseId");

                    b.ToTable("ApplicationUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "3de00zzz-2828-0000-0000-3de000000000",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7d4e8b88-6911-422a-95bb-9b7818fece33",
                            Email = "dummyuser@example.com",
                            EmailConfirmed = false,
                            EventId = 0,
                            FriendlyName = "Dummy User",
                            LockoutEnabled = false,
                            NormalizedEmail = "DUMMYUSER@EXAMPLE.COM",
                            NormalizedUserName = "DUMMYUSER",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1ba0b31e-5375-4dca-afea-410ade8b64ed",
                            TwoFactorEnabled = false,
                            UserCarEventId = 0,
                            UserDetailId = 0,
                            UserEventId = 0,
                            UserName = "DummyUser1"
                        },
                        new
                        {
                            Id = "3de00zzz-2828-0000-0000-3de000000001",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "73f77d01-f450-4a45-883d-998e8b750709",
                            Email = "adammen@gmail.com",
                            EmailConfirmed = false,
                            EventId = 0,
                            FriendlyName = "Adam Man",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADAMMAN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "40c3e697-8f04-4925-a442-d329e6d7fe87",
                            TwoFactorEnabled = false,
                            UserCarEventId = 0,
                            UserDetailId = 0,
                            UserEventId = 0,
                            UserName = "Adam Man"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUserDetail", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("ApplicationUserDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Attribute", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Blank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("String")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Blanks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Item 1",
                            String = "This is item 1 data"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("HasHarness")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("HasLogger")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("HasTag")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsAdas")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LoggerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Make")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Miles")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParkingSpace")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SourceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeleGeneration")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TestReleaseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Year")
                        .HasColumnType("REAL");

                    b.HasKey("CarId");

                    b.HasIndex("TestReleaseId");

                    b.HasIndex("UserId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            CarId = 1001,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "California",
                            Make = "Mercedes",
                            Miles = 5000,
                            Model = "EQE 400",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1002,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 5000,
                            Model = "Maybach GLS 600",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG6",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1003,
                            HasHarness = false,
                            HasLogger = true,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            LoggerId = 1,
                            Make = "Mercedes",
                            Miles = 5000,
                            Model = "EQS 450+",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1004,
                            HasHarness = false,
                            HasLogger = true,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            LoggerId = 3,
                            Make = "Mercedes",
                            Miles = 5000,
                            Model = "GLS 580 4MATIC",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7 * 2",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1005,
                            HasHarness = false,
                            HasLogger = true,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            LoggerId = 5,
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350 4MATIC",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1006,
                            HasHarness = false,
                            HasLogger = true,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            LoggerId = 6,
                            Make = "Mercedes",
                            Miles = 200,
                            Model = "Maybach EQS 680",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1007,
                            HasHarness = false,
                            HasLogger = true,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            LoggerId = 2,
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1008,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            LoggerId = 4,
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLS 450 4MATIC",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7 * 2",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1009,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG EQE 53 4MAT",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1010,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1011,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1012,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "Maybach GLS 600",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7*2",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1013,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1014,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450 4MATIC",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1015,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLE 400 e 4MATIC",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7*2",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1016,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "MAYBACH EQS 680",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1017,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG GLE 63 S 4MAT",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7*2",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1018,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLE 400 e 4MATIC",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7*2",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1019,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG EQE 53 4MAT",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1020,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1021,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1022,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 5000,
                            Model = "C 300",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "GEN20",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1023,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1024,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG CLA 45",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7*2",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1025,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450 4MATIC",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1026,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG S 63 e ",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1027,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLC 300",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1028,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1029,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1030,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "Maybach S 580",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1031,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG EQE 53 4MAT",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1032,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQB 350 4MATIC",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG6",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1033,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG S 63 e 4MATIC",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1034,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 550 4MATIC",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1035,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG E 53 4MATIC",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG6",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1036,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "E 350 4MATIC",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "GEN20",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1037,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350 4MATIC",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1038,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        },
                        new
                        {
                            CarId = 1039,
                            HasHarness = false,
                            HasLogger = false,
                            HasTag = false,
                            IsAdas = false,
                            IsDeleted = false,
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350",
                            ParkingSpace = 1,
                            SourceId = 1,
                            TeleGeneration = "NTG7",
                            UserId = "3de00zzz-2828-0000-0000-3de000000000",
                            Year = 2023.0
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarDetail", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adas")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("AdasBool")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DetailId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Finas")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullVin")
                        .HasColumnType("TEXT");

                    b.Property<string>("HarnessStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("HeadUnit")
                        .HasColumnType("TEXT");

                    b.Property<string>("SoftwareVersion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tag")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vin")
                        .HasColumnType("TEXT");

                    b.Property<string>("VinLast4")
                        .HasColumnType("TEXT");

                    b.HasKey("CarId");

                    b.HasIndex("DetailId");

                    b.ToTable("CarDetails");

                    b.HasData(
                        new
                        {
                            CarId = 1001,
                            AdasBool = true,
                            Finas = "X294-01019",
                            Tag = "180",
                            Vin = "4JGGM2BB6PA000131"
                        },
                        new
                        {
                            CarId = 1002,
                            AdasBool = true,
                            Finas = "X167-04607",
                            HeadUnit = "X00.0",
                            Tag = "181",
                            Vin = "4JGFF8HB5NA357779"
                        },
                        new
                        {
                            CarId = 1003,
                            AdasBool = true,
                            Finas = "X296-01198",
                            HeadUnit = "X00.0",
                            Tag = "182",
                            Vin = "4JGDM2DB4RA003435"
                        },
                        new
                        {
                            CarId = 1004,
                            AdasBool = true,
                            Finas = "X167-06625",
                            HeadUnit = "X00.0",
                            Tag = "183",
                            Vin = "4JGFF8FE9RA844776"
                        },
                        new
                        {
                            CarId = 1005,
                            AdasBool = true,
                            Finas = "X294-01471",
                            HeadUnit = "X00.0",
                            Tag = "184",
                            Vin = "4JGGM1CB8RA000790"
                        },
                        new
                        {
                            CarId = 1006,
                            AdasBool = true,
                            Finas = "Z296-01209",
                            HeadUnit = "X00.0",
                            Tag = "185",
                            Vin = "4JGDX5FB2RA003388"
                        },
                        new
                        {
                            CarId = 1007,
                            AdasBool = true,
                            Finas = "X296-01210",
                            HeadUnit = "X00.0",
                            Tag = "186",
                            Vin = "4JGDM4EB5RA003437"
                        },
                        new
                        {
                            CarId = 1008,
                            AdasBool = true,
                            Finas = "X167-06656",
                            HeadUnit = "X00.0",
                            Tag = "187",
                            Vin = "4JGFF5KE1RA844775"
                        },
                        new
                        {
                            CarId = 1009,
                            AdasBool = true,
                            Finas = "X294-01457",
                            HeadUnit = "X00.0",
                            Tag = "188",
                            Vin = "4JGGM5DB8RA001590"
                        },
                        new
                        {
                            CarId = 1010,
                            AdasBool = true,
                            Finas = "X296-00421",
                            HeadUnit = "X00.0",
                            Tag = "189",
                            Vin = "4JGDM4EB6PA000351"
                        },
                        new
                        {
                            CarId = 1011,
                            AdasBool = true,
                            Finas = "X296-00395",
                            HeadUnit = "X00.0",
                            Tag = "190",
                            Vin = "4JGDM2DB9PA000205"
                        },
                        new
                        {
                            CarId = 1012,
                            AdasBool = true,
                            Finas = "X167-06686",
                            HeadUnit = "X00.0",
                            Tag = "191",
                            Vin = "4JGFF8HB1RA844774"
                        },
                        new
                        {
                            CarId = 1013,
                            AdasBool = true,
                            Finas = "X294-01532",
                            HeadUnit = "X00.0",
                            Tag = "192",
                            Vin = "4JGGM2BB2RA000792"
                        },
                        new
                        {
                            CarId = 1014,
                            AdasBool = true,
                            Finas = "X296-00702",
                            HeadUnit = "X00.0",
                            Tag = "193",
                            Vin = "4JGDM2EB1PU000194"
                        },
                        new
                        {
                            CarId = 1015,
                            AdasBool = true,
                            Finas = "V167-06463",
                            HeadUnit = "X00.0",
                            Tag = "195",
                            Vin = "4JGFB4GB3RA809370"
                        },
                        new
                        {
                            CarId = 1016,
                            AdasBool = true,
                            Finas = "Z296-01192",
                            HeadUnit = "X00.0",
                            Tag = "196",
                            Vin = "4JGDX5FB9RA003386"
                        },
                        new
                        {
                            CarId = 1017,
                            AdasBool = true,
                            Finas = "C167-06461",
                            HeadUnit = "X00.0",
                            Tag = "197",
                            Vin = "4JGFD8KB4RA809371"
                        },
                        new
                        {
                            CarId = 1018,
                            AdasBool = true,
                            Finas = "V167-06567",
                            HeadUnit = "X00.0",
                            Tag = "198",
                            Vin = "4JGFB4GB1PA883660"
                        },
                        new
                        {
                            CarId = 1019,
                            AdasBool = true,
                            Finas = "X294-01456",
                            HeadUnit = "X00.0",
                            Tag = "199",
                            Vin = "4JGGM5DBXRA001588"
                        },
                        new
                        {
                            CarId = 1020,
                            AdasBool = true,
                            Finas = "X296-00848",
                            HeadUnit = "X00.0",
                            Tag = "288",
                            Vin = "4JGDM4EB7PA000701"
                        },
                        new
                        {
                            CarId = 1021,
                            AdasBool = true,
                            Finas = "V297-02377",
                            HeadUnit = "X00.0",
                            Tag = "638",
                            Vin = "W1KCG4EB4PA019834"
                        },
                        new
                        {
                            CarId = 1022,
                            AdasBool = true,
                            Finas = "W206-01531",
                            HeadUnit = "X00.0",
                            Tag = "651",
                            Vin = "W1KAF4GB9NR000041"
                        },
                        new
                        {
                            CarId = 1023,
                            AdasBool = true,
                            Finas = "V297-01008",
                            HeadUnit = "X00.0",
                            Tag = "652",
                            Vin = "W1KCG4EB7NA000823"
                        },
                        new
                        {
                            CarId = 1024,
                            AdasBool = true,
                            Finas = "A118-01377",
                            HeadUnit = "X00.0",
                            Tag = "653",
                            Vin = "W1K5J5EB8RN368913"
                        },
                        new
                        {
                            CarId = 1025,
                            AdasBool = true,
                            Finas = "V297-01062",
                            HeadUnit = "X00.0",
                            Tag = "654",
                            Vin = "W1KCG2EB8NA003265"
                        },
                        new
                        {
                            CarId = 1026,
                            AdasBool = true,
                            Finas = "V223-05154",
                            HeadUnit = "X00.0",
                            Tag = "655",
                            Vin = "W1K6G8CB9RA200096"
                        },
                        new
                        {
                            CarId = 1027,
                            AdasBool = true,
                            Finas = "X254-02459",
                            HeadUnit = "X00.0",
                            Tag = "657",
                            Vin = "W1NKM4GB3PF001221"
                        },
                        new
                        {
                            CarId = 1028,
                            AdasBool = true,
                            Finas = "V295-01073",
                            HeadUnit = "X00.0",
                            Tag = "658",
                            Vin = "W1KEG2BB5NF000498"
                        },
                        new
                        {
                            CarId = 1029,
                            AdasBool = true,
                            Finas = "V295-01074",
                            HeadUnit = "X00.0",
                            Tag = "659",
                            Vin = "W1KEG2BB7NF000499"
                        },
                        new
                        {
                            CarId = 1030,
                            AdasBool = true,
                            Finas = "Z223-05153",
                            HeadUnit = "X00.0",
                            Tag = "660",
                            Vin = "W1K6X7GB9RA203259"
                        },
                        new
                        {
                            CarId = 1031,
                            AdasBool = true,
                            Finas = "N295-01333",
                            HeadUnit = "X00.0",
                            Tag = "661",
                            Vin = "W1KEG5DB3PF005779"
                        },
                        new
                        {
                            CarId = 1032,
                            AdasBool = true,
                            Finas = "X243-01749",
                            HeadUnit = "X00.0",
                            Tag = "662",
                            Vin = "W1N9M1DB3RN027408"
                        },
                        new
                        {
                            CarId = 1033,
                            AdasBool = true,
                            Finas = "V223-04879",
                            HeadUnit = "X00.0",
                            Tag = "663",
                            Vin = "W1K6G8CB5PA159432"
                        },
                        new
                        {
                            CarId = 1034,
                            AdasBool = true,
                            Finas = "V297-01298",
                            HeadUnit = "X00.0",
                            Tag = "664",
                            Vin = "W1KCG4EB6NA000411"
                        },
                        new
                        {
                            CarId = 1035,
                            AdasBool = true,
                            Finas = "A238-02435",
                            HeadUnit = "X00.0",
                            Tag = "665",
                            Vin = "W1K1K6BB7PF185712"
                        },
                        new
                        {
                            CarId = 1036,
                            AdasBool = true,
                            Finas = "W214-01098",
                            HeadUnit = "X00.0",
                            Tag = "666",
                            Vin = "W1KLF4HB7RA000650"
                        },
                        new
                        {
                            CarId = 1037,
                            AdasBool = true,
                            Finas = "X294-00461",
                            HeadUnit = "X00.0",
                            Tag = "668",
                            Vin = "4JGGM1CB5PA000386"
                        },
                        new
                        {
                            CarId = 1038,
                            AdasBool = true,
                            Finas = "X296-00322",
                            HeadUnit = "X00.0",
                            Tag = "669",
                            Vin = "4JGDM2DB2PA000031"
                        },
                        new
                        {
                            CarId = 1039,
                            AdasBool = true,
                            Finas = "V295-00503",
                            HeadUnit = "X00.0",
                            Tag = "670",
                            Vin = "W1KEG2BB5PF000620"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarStatusNew", b =>
                {
                    b.Property<int>("CarStatusNewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CarStatusNewId");

                    b.ToTable("CarStatusNews");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DefaultPriority")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CheckListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CompletedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsGeneric")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TestReleaseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("TestReleaseId");

                    b.ToTable("CheckListItems");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("DetailTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("DetailTypeId");

                    b.ToTable("Detail");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Detail");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BlazorApp1.CarModels.DetailType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TruckDetailId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TruckDetailId");

                    b.ToTable("DetailType");

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            Name = "Ticket"
                        },
                        new
                        {
                            Id = 1002,
                            Name = "Car"
                        },
                        new
                        {
                            Id = 1003,
                            Name = "Event"
                        },
                        new
                        {
                            Id = 1004,
                            Name = "Ticket"
                        },
                        new
                        {
                            Id = 1005,
                            Name = "Shop"
                        },
                        new
                        {
                            Id = 1006,
                            Name = "Highlight"
                        },
                        new
                        {
                            Id = 1007,
                            Name = "Improvement"
                        },
                        new
                        {
                            Id = 1008,
                            Name = "Critique"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Ticket"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Car"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Event"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ticket"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Shop"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Highlight"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Improvement"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Critique"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("DrivingHours")
                        .HasColumnType("TEXT");

                    b.HasKey("DriverId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Entity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Entities");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.EntityAttributeValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AttributeId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("EntityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("EntityId");

                    b.ToTable("EntityAttributeValues");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ErrorLog", b =>
                {
                    b.Property<int>("ErrorLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ErrorDetails")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorNotes")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ErrorPriority")
                        .HasColumnType("INTEGER");

                    b.HasKey("ErrorLogId");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<int?>("CarId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CarId");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EventTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NoteId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SimpleEventTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("TextNote")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserEventDetail")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserEventDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("NoteId");

                    b.HasIndex("SimpleEventTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Events", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.EventDetail", b =>
                {
                    b.Property<int>("EventDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<int>("DetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EventDetailId");

                    b.HasIndex("DetailId");

                    b.HasIndex("EventId");

                    b.ToTable("EventDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("EventTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "BookCar"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Comission"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Decomission"
                        },
                        new
                        {
                            Id = 4,
                            Name = "ErrorIdentification"
                        },
                        new
                        {
                            Id = 5,
                            Name = "TestDrive"
                        },
                        new
                        {
                            Id = 6,
                            Name = "ShopConfiguration"
                        },
                        new
                        {
                            Id = 7,
                            Name = "PreparedForDrive"
                        },
                        new
                        {
                            Id = 8,
                            Name = "TagAssigned"
                        },
                        new
                        {
                            Id = 9,
                            Name = "TagUnAssigned"
                        },
                        new
                        {
                            Id = 10,
                            Name = "LoggerInstall"
                        },
                        new
                        {
                            Id = 11,
                            Name = "LoggerUnInstall"
                        },
                        new
                        {
                            Id = 12,
                            Name = "MainDriveEvent"
                        },
                        new
                        {
                            Id = 13,
                            Name = "RoutineDrive"
                        },
                        new
                        {
                            Id = 14,
                            Name = "TicketSubmission"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ExcelDataRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hash")
                        .HasColumnType("TEXT");

                    b.Property<string>("JsonData")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ExcelDataRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = "Data1",
                            Hash = "hash1",
                            LastModified = new DateTime(2024, 1, 5, 13, 50, 3, 410, DateTimeKind.Local).AddTicks(2882),
                            UploadDate = new DateTime(2024, 1, 5, 13, 50, 3, 410, DateTimeKind.Local).AddTicks(2798)
                        },
                        new
                        {
                            Id = 2,
                            Data = "Data2",
                            Hash = "hash2",
                            LastModified = new DateTime(2024, 1, 5, 13, 50, 3, 410, DateTimeKind.Local).AddTicks(2887),
                            UploadDate = new DateTime(2024, 1, 5, 13, 50, 3, 410, DateTimeKind.Local).AddTicks(2886)
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ExcelDataRecordAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExcelDataRecordId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExcelDataRecordId");

                    b.ToTable("ExcelDataRecordAttributes");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ExcelDataRecordChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ColumnName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ExcelDataRecordId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OldValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExcelDataRecordId");

                    b.ToTable("ExcelDataRecordChanges");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Issue", b =>
                {
                    b.Property<int>("IssueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssignedTo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedAt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedByUser")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubmittedAt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubmittedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("System")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IssueId");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Time")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("Log", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Logger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NaturalId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NewCarId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NewCarId1")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NumLoggers")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TruckId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypeLogger")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isAssigned")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("NewCarId1");

                    b.HasIndex("TruckId");

                    b.ToTable("Logger", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NumLoggers = 1,
                            TypeLogger = 0,
                            isAssigned = false
                        },
                        new
                        {
                            Id = 2,
                            NumLoggers = 1,
                            TypeLogger = 0,
                            isAssigned = false
                        },
                        new
                        {
                            Id = 3,
                            NumLoggers = 1,
                            TypeLogger = 1,
                            isAssigned = false
                        },
                        new
                        {
                            Id = 4,
                            NumLoggers = 1,
                            TypeLogger = 1,
                            isAssigned = false
                        },
                        new
                        {
                            Id = 5,
                            NumLoggers = 1,
                            TypeLogger = 2,
                            isAssigned = false
                        },
                        new
                        {
                            Id = 6,
                            NumLoggers = 1,
                            TypeLogger = 2,
                            isAssigned = false
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.MasterLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MasterLog");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Message = "App Birth.",
                            Time = new DateTime(2024, 1, 5, 13, 50, 3, 410, DateTimeKind.Local).AddTicks(9275)
                        },
                        new
                        {
                            Id = 2L,
                            Message = "Hello from The past.",
                            Time = new DateTime(2024, 1, 5, 13, 50, 3, 410, DateTimeKind.Local).AddTicks(9315)
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Module", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("CurrentSoftwareVersion")
                        .HasColumnType("REAL");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double?>("NextSoftwareVersion")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("ProjectedRelease")
                        .HasColumnType("TEXT");

                    b.HasKey("ModuleId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.MyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MyModels");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.NewCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Adas")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CarStatusId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Finas")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LoggerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Make")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Mileage")
                        .HasColumnType("REAL");

                    b.Property<int?>("Miles")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SourceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tagnumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("TeleGeneration")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vin")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("NewCar", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adas = true,
                            Finas = "  X294-01019",
                            Location = "California",
                            Make = "Mercedes",
                            Miles = 5000,
                            Model = "EQE 400",
                            SourceId = 2,
                            Tagnumber = "180",
                            TeleGeneration = "NTG7",
                            UserId = "d02a99db-8c5a-4e0f-9d01-1da28abf91a4",
                            Vin = "4JGGM2BB6PA000131",
                            Year = 2023
                        },
                        new
                        {
                            Id = 2,
                            Adas = true,
                            Finas = "X167-04607",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "Maybach GLS 600",
                            SourceId = 2,
                            Tagnumber = " 181",
                            TeleGeneration = "NTG6",
                            UserId = "d02a99db-8c5a-4e0f-9d01-1da28abf91a4",
                            Vin = "4JGFF8HB5NA357779",
                            Year = 2023
                        },
                        new
                        {
                            Id = 3,
                            Adas = true,
                            Finas = "X296-01198",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450+",
                            SourceId = 2,
                            Tagnumber = " 182",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM2DB4RA003435",
                            Year = 2025
                        },
                        new
                        {
                            Id = 4,
                            Adas = true,
                            Finas = "X167-06625",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLS 580 4matic",
                            SourceId = 2,
                            Tagnumber = " 183",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGFF8FE9RA844776",
                            Year = 2025
                        },
                        new
                        {
                            Id = 5,
                            Adas = true,
                            Finas = "X294-01471",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350 4matic",
                            SourceId = 2,
                            Tagnumber = " 184",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGGM1CB8RA000790",
                            Year = 2025
                        },
                        new
                        {
                            Id = 6,
                            Adas = true,
                            Finas = "Z296-01209",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "Maybach EQS 680",
                            SourceId = 2,
                            Tagnumber = " 185",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDX5FB2RA003388",
                            Year = 2025
                        },
                        new
                        {
                            Id = 7,
                            Adas = true,
                            Finas = "X296-01210",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 186",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM4EB5RA003437",
                            Year = 2025
                        },
                        new
                        {
                            Id = 8,
                            Adas = true,
                            Finas = "X167-06656",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLS 450 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 187",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGFF5KE1RA844775",
                            Year = 2025
                        },
                        new
                        {
                            Id = 9,
                            Adas = true,
                            Finas = "X294-01457",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG EQE 53 4MAT",
                            SourceId = 2,
                            Tagnumber = " 188",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGGM5DB8RA001590",
                            Year = 2025
                        },
                        new
                        {
                            Id = 10,
                            Adas = true,
                            Finas = "X296-00421",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 189",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM4EB6PA000351",
                            Year = 2025
                        },
                        new
                        {
                            Id = 11,
                            Adas = true,
                            Finas = "X296-00395",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450",
                            SourceId = 2,
                            Tagnumber = " 190",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM2DB9PA000205",
                            Year = 2025
                        },
                        new
                        {
                            Id = 12,
                            Adas = true,
                            Finas = "X167-06686",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "Maybach GLS 600",
                            SourceId = 2,
                            Tagnumber = " 191",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGFF8HB1RA844774",
                            Year = 2025
                        },
                        new
                        {
                            Id = 13,
                            Adas = true,
                            Finas = "X294-01532",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350+",
                            SourceId = 2,
                            Tagnumber = " 192",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGGM2BB2RA000792",
                            Year = 2025
                        },
                        new
                        {
                            Id = 14,
                            Adas = true,
                            Finas = "X296-00702",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 193",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM2EB1PU000194",
                            Year = 2025
                        },
                        new
                        {
                            Id = 15,
                            Adas = true,
                            Finas = "V167-06463",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLE 400 e 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 195",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGFB4GB3RA809370",
                            Year = 2025
                        },
                        new
                        {
                            Id = 16,
                            Adas = true,
                            Finas = "Z296-01192",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "MAYBACH EQS 680",
                            SourceId = 2,
                            Tagnumber = " 196",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDX5FB9RA003386",
                            Year = 2025
                        },
                        new
                        {
                            Id = 17,
                            Adas = true,
                            Finas = "C167-06461",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG GLE 63 S 4MAT",
                            SourceId = 2,
                            Tagnumber = " 197",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGFD8KB4RA809371",
                            Year = 2025
                        },
                        new
                        {
                            Id = 18,
                            Adas = true,
                            Finas = "V167-06567",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLE 400 e 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 198",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGFB4GB1PA883660",
                            Year = 2025
                        },
                        new
                        {
                            Id = 19,
                            Adas = true,
                            Finas = "X294-01456",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG EQE 53 4MAT",
                            SourceId = 2,
                            Tagnumber = " 199",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGGM5DBXRA001588",
                            Year = 2025
                        },
                        new
                        {
                            Id = 20,
                            Adas = true,
                            Finas = "X296-00848",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 288",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM4EB7PA000701",
                            Year = 2025
                        },
                        new
                        {
                            Id = 21,
                            Adas = true,
                            Finas = "V297-02377",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 638",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KCG4EB4PA019834",
                            Year = 2025
                        },
                        new
                        {
                            Id = 22,
                            Adas = true,
                            Finas = "W206-01531",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "C 300",
                            SourceId = 2,
                            Tagnumber = " 651",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KAF4GB9NR000041",
                            Year = 2025
                        },
                        new
                        {
                            Id = 23,
                            Adas = true,
                            Finas = "V297-01008",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 652",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KCG4EB7NA000823",
                            Year = 2025
                        },
                        new
                        {
                            Id = 24,
                            Adas = true,
                            Finas = "A118-01377",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG CLA 45 ",
                            SourceId = 2,
                            Tagnumber = " 653",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1K5J5EB8RN368913",
                            Year = 2025
                        },
                        new
                        {
                            Id = 25,
                            Adas = true,
                            Finas = "V297-01062",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 654",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KCG2EB8NA003265",
                            Year = 2025
                        },
                        new
                        {
                            Id = 26,
                            Adas = true,
                            Finas = "V223-05154",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG S 63 e ",
                            SourceId = 2,
                            Tagnumber = " 655",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1K6G8CB9RA200096",
                            Year = 2025
                        },
                        new
                        {
                            Id = 27,
                            Adas = true,
                            Finas = "X254-02459",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLC 300",
                            SourceId = 2,
                            Tagnumber = " 657",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1NKM4GB3PF001221",
                            Year = 2025
                        },
                        new
                        {
                            Id = 28,
                            Adas = true,
                            Finas = "V295-01073",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350+",
                            SourceId = 2,
                            Tagnumber = " 658",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KEG2BB5NF000498",
                            Year = 2025
                        },
                        new
                        {
                            Id = 29,
                            Adas = true,
                            Finas = "V295-01074",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350+",
                            SourceId = 2,
                            Tagnumber = " 659",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KEG2BB7NF000499",
                            Year = 2025
                        },
                        new
                        {
                            Id = 30,
                            Adas = true,
                            Finas = "Z223-05153",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "Maybach S 580",
                            SourceId = 2,
                            Tagnumber = " 660",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1K6X7GB9RA203259",
                            Year = 2025
                        },
                        new
                        {
                            Id = 31,
                            Adas = true,
                            Finas = "N295-01333",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG EQE 53 4MAT",
                            SourceId = 2,
                            Tagnumber = " 661",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KEG5DB3PF005779",
                            Year = 2025
                        },
                        new
                        {
                            Id = 32,
                            Adas = true,
                            Finas = "X243-01749",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQB 350 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 662",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1N9M1DB3RN027408",
                            Year = 2025
                        },
                        new
                        {
                            Id = 33,
                            Adas = true,
                            Finas = "V223-04879",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG S 63 e 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 663",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1K6G8CB5PA159432",
                            Year = 2025
                        },
                        new
                        {
                            Id = 34,
                            Adas = true,
                            Finas = "V297-01298",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 550 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 664",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KCG4EB6NA000411",
                            Year = 2025
                        },
                        new
                        {
                            Id = 35,
                            Adas = true,
                            Finas = "A238-02435",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG E 53 4MATIC+",
                            SourceId = 2,
                            Tagnumber = " 665",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1K1K6BB7PF185712",
                            Year = 2025
                        },
                        new
                        {
                            Id = 36,
                            Adas = true,
                            Finas = "W214-01098",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "E 350 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 666",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KLF4HB7RA000650",
                            Year = 2025
                        },
                        new
                        {
                            Id = 37,
                            Adas = true,
                            Finas = "X294-00461",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 668",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGGM1CB5PA000386",
                            Year = 2025
                        },
                        new
                        {
                            Id = 38,
                            Adas = true,
                            Finas = "X296-00322",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450",
                            SourceId = 2,
                            Tagnumber = " 669",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM2DB2PA000031",
                            Year = 2025
                        },
                        new
                        {
                            Id = 39,
                            Adas = true,
                            Finas = "V295-00503",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350+",
                            SourceId = 2,
                            Tagnumber = "670",
                            TeleGeneration = "",
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KEG2BB5PF000620",
                            Year = 2025
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.NoteAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NoteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NoteId");

                    b.ToTable("NoteAttachment");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.NoteComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("NoteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("NoteId");

                    b.ToTable("NoteComment");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.NoteTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("NoteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NoteId");

                    b.ToTable("NoteTag");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.RoleEventMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DefaultEventTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RoleEventMappings");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.SimpleEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SimpleEvent", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.SimpleEventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("SimpleEventTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "BookCar"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Comission"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Decomission"
                        },
                        new
                        {
                            Id = 4,
                            Name = "ErrorIdentification"
                        },
                        new
                        {
                            Id = 5,
                            Name = "TestDrive"
                        },
                        new
                        {
                            Id = 6,
                            Name = "ShopConfiguration"
                        },
                        new
                        {
                            Id = 7,
                            Name = "PreparedForDrive"
                        },
                        new
                        {
                            Id = 8,
                            Name = "TagAssigned"
                        },
                        new
                        {
                            Id = 9,
                            Name = "TagUnAssigned"
                        },
                        new
                        {
                            Id = 10,
                            Name = "LoggerInstall"
                        },
                        new
                        {
                            Id = 11,
                            Name = "LoggerUnInstall"
                        },
                        new
                        {
                            Id = 12,
                            Name = "MainDriveEvent"
                        },
                        new
                        {
                            Id = 13,
                            Name = "RoutineDrive"
                        },
                        new
                        {
                            Id = 14,
                            Name = "TicketSubmission"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Software", b =>
                {
                    b.Property<int>("SoftwareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HeadUnit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NextSoftwareVersion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SoftwareVersion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SoftwareId");

                    b.ToTable("Softwares");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Source", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UX_Source_Name");

                    b.ToTable("Sources", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            Name = "MarketBorrow"
                        },
                        new
                        {
                            Id = 1002,
                            Name = "Purchased"
                        },
                        new
                        {
                            Id = 1003,
                            Name = "Owned"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Unknown"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Purchased"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Owned"
                        },
                        new
                        {
                            Id = 4,
                            Name = "MarketBorrow"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Status", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UX_Status_Name");

                    b.ToTable("Status", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            Name = "Available"
                        },
                        new
                        {
                            Id = 1002,
                            Name = "NotAvailable"
                        },
                        new
                        {
                            Id = 1003,
                            Name = "AwaitingAction"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Available"
                        },
                        new
                        {
                            Id = 2,
                            Name = "NotAvailable"
                        },
                        new
                        {
                            Id = 3,
                            Name = "AwaitingAction"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TaskModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAssigned")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateCompleted")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateExpired")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Importance")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("RangeEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RangeStart")
                        .HasColumnType("TEXT");

                    b.Property<string>("Task")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TaskModels");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TeamTimeline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.ToTable("TeamTimeline");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TeamTypes", b =>
                {
                    b.Property<int>("TeamTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TeamTypeId");

                    b.ToTable("TeamTypes");

                    b.HasData(
                        new
                        {
                            TeamTypeId = -1,
                            Name = "Unassigned"
                        },
                        new
                        {
                            TeamTypeId = -2,
                            Name = "Adas"
                        },
                        new
                        {
                            TeamTypeId = -3,
                            Name = "Telematics"
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TestRelease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CalendarMonth")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CalendarWeek")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CalendarYear")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TestReleases");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssigneeId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssigneeId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TicketId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketAttachment");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("TicketId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketComment");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Change")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ChangedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TicketId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketHistory");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TicketId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketTag");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Truck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Adas")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Finas")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("Make")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Miles")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NewTruckLoggerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SourceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tagnumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("TeleGeneration")
                        .HasColumnType("TEXT");

                    b.Property<int>("TruckDetail")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TruckStatusId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vin")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Truck", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adas = true,
                            Finas = "X294-01019",
                            Location = "California",
                            Make = "Mercedes",
                            Miles = 5000,
                            Model = "EQE 400",
                            SourceId = 2,
                            Tagnumber = "180",
                            TeleGeneration = "NTG7",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "d02a99db-8c5a-4e0f-9d01-1da28abf91a4",
                            Vin = "4JGGM2BB6PA000131",
                            Year = 2023
                        },
                        new
                        {
                            Id = 2,
                            Adas = true,
                            Finas = "X167-04607",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "Maybach GLS 600",
                            SourceId = 2,
                            Tagnumber = "181",
                            TeleGeneration = "NTG6",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "d02a99db-8c5a-4e0f-9d01-1da28abf91a4",
                            Vin = "4JGFF8HB5NA357779",
                            Year = 2023
                        },
                        new
                        {
                            Id = 3,
                            Adas = true,
                            Finas = "X296-01198",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450+",
                            SourceId = 2,
                            Tagnumber = " 182",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM2DB4RA003435",
                            Year = 2025
                        },
                        new
                        {
                            Id = 4,
                            Adas = true,
                            Finas = "X167-06625",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLS 580 4matic",
                            SourceId = 2,
                            Tagnumber = " 183",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGFF8FE9RA844776",
                            Year = 2025
                        },
                        new
                        {
                            Id = 5,
                            Adas = true,
                            Finas = "X294-01471",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350 4matic",
                            SourceId = 2,
                            Tagnumber = " 184",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGGM1CB8RA000790",
                            Year = 2025
                        },
                        new
                        {
                            Id = 6,
                            Adas = true,
                            Finas = "Z296-01209",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "Maybach EQS 680",
                            SourceId = 2,
                            Tagnumber = " 185",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDX5FB2RA003388",
                            Year = 2025
                        },
                        new
                        {
                            Id = 7,
                            Adas = true,
                            Finas = "X296-01210",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 186",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM4EB5RA003437",
                            Year = 2025
                        },
                        new
                        {
                            Id = 8,
                            Adas = true,
                            Finas = "X167-06656",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLS 450 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 187",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGFF5KE1RA844775",
                            Year = 2025
                        },
                        new
                        {
                            Id = 9,
                            Adas = true,
                            Finas = "X294-01457",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG EQE 53 4MAT",
                            SourceId = 2,
                            Tagnumber = " 188",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGGM5DB8RA001590",
                            Year = 2025
                        },
                        new
                        {
                            Id = 10,
                            Adas = true,
                            Finas = "X296-00421",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 189",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM4EB6PA000351",
                            Year = 2025
                        },
                        new
                        {
                            Id = 11,
                            Adas = true,
                            Finas = "X296-00395",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450",
                            SourceId = 2,
                            Tagnumber = " 190",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM2DB9PA000205",
                            Year = 2025
                        },
                        new
                        {
                            Id = 12,
                            Adas = true,
                            Finas = "X167-06686",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "Maybach GLS 600",
                            SourceId = 2,
                            Tagnumber = " 191",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGFF8HB1RA844774",
                            Year = 2025
                        },
                        new
                        {
                            Id = 13,
                            Adas = true,
                            Finas = "X294-01532",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350+",
                            SourceId = 2,
                            Tagnumber = " 192",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGGM2BB2RA000792",
                            Year = 2025
                        },
                        new
                        {
                            Id = 14,
                            Adas = true,
                            Finas = "X296-00702",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 193",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM2EB1PU000194",
                            Year = 2025
                        },
                        new
                        {
                            Id = 15,
                            Adas = true,
                            Finas = "V167-06463",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLE 400 e 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 195",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGFB4GB3RA809370",
                            Year = 2025
                        },
                        new
                        {
                            Id = 16,
                            Adas = true,
                            Finas = "Z296-01192",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "MAYBACH EQS 680",
                            SourceId = 2,
                            Tagnumber = " 196",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDX5FB9RA003386",
                            Year = 2025
                        },
                        new
                        {
                            Id = 17,
                            Adas = true,
                            Finas = "C167-06461",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG GLE 63 S 4MAT",
                            SourceId = 2,
                            Tagnumber = " 197",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGFD8KB4RA809371",
                            Year = 2025
                        },
                        new
                        {
                            Id = 18,
                            Adas = true,
                            Finas = "V167-06567",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLE 400 e 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 198",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGFB4GB1PA883660",
                            Year = 2025
                        },
                        new
                        {
                            Id = 19,
                            Adas = true,
                            Finas = "X294-01456",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG EQE 53 4MAT",
                            SourceId = 2,
                            Tagnumber = " 199",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGGM5DBXRA001588",
                            Year = 2025
                        },
                        new
                        {
                            Id = 20,
                            Adas = true,
                            Finas = "X296-00848",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 288",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM4EB7PA000701",
                            Year = 2025
                        },
                        new
                        {
                            Id = 21,
                            Adas = true,
                            Finas = "V297-02377",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 638",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KCG4EB4PA019834",
                            Year = 2025
                        },
                        new
                        {
                            Id = 22,
                            Adas = true,
                            Finas = "W206-01531",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "C 300",
                            SourceId = 2,
                            Tagnumber = " 651",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KAF4GB9NR000041",
                            Year = 2025
                        },
                        new
                        {
                            Id = 23,
                            Adas = true,
                            Finas = "V297-01008",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 580 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 652",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KCG4EB7NA000823",
                            Year = 2025
                        },
                        new
                        {
                            Id = 24,
                            Adas = true,
                            Finas = "A118-01377",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG CLA 45 ",
                            SourceId = 2,
                            Tagnumber = " 653",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1K5J5EB8RN368913",
                            Year = 2025
                        },
                        new
                        {
                            Id = 25,
                            Adas = true,
                            Finas = "V297-01062",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 654",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KCG2EB8NA003265",
                            Year = 2025
                        },
                        new
                        {
                            Id = 26,
                            Adas = true,
                            Finas = "V223-05154",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG S 63 e ",
                            SourceId = 2,
                            Tagnumber = " 655",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1K6G8CB9RA200096",
                            Year = 2025
                        },
                        new
                        {
                            Id = 27,
                            Adas = true,
                            Finas = "X254-02459",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "GLC 300",
                            SourceId = 2,
                            Tagnumber = " 657",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1NKM4GB3PF001221",
                            Year = 2025
                        },
                        new
                        {
                            Id = 28,
                            Adas = true,
                            Finas = "V295-01073",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350+",
                            SourceId = 2,
                            Tagnumber = " 658",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KEG2BB5NF000498",
                            Year = 2025
                        },
                        new
                        {
                            Id = 29,
                            Adas = true,
                            Finas = "V295-01074",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350+",
                            SourceId = 2,
                            Tagnumber = " 659",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KEG2BB7NF000499",
                            Year = 2025
                        },
                        new
                        {
                            Id = 30,
                            Adas = true,
                            Finas = "Z223-05153",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "Maybach S 580",
                            SourceId = 2,
                            Tagnumber = " 660",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1K6X7GB9RA203259",
                            Year = 2025
                        },
                        new
                        {
                            Id = 31,
                            Adas = true,
                            Finas = "N295-01333",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG EQE 53 4MAT",
                            SourceId = 2,
                            Tagnumber = " 661",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KEG5DB3PF005779",
                            Year = 2025
                        },
                        new
                        {
                            Id = 32,
                            Adas = true,
                            Finas = "X243-01749",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQB 350 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 662",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1N9M1DB3RN027408",
                            Year = 2025
                        },
                        new
                        {
                            Id = 33,
                            Adas = true,
                            Finas = "V223-04879",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG S 63 e 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 663",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1K6G8CB5PA159432",
                            Year = 2025
                        },
                        new
                        {
                            Id = 34,
                            Adas = true,
                            Finas = "V297-01298",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 550 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 664",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KCG4EB6NA000411",
                            Year = 2025
                        },
                        new
                        {
                            Id = 35,
                            Adas = true,
                            Finas = "A238-02435",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "AMG E 53 4MATIC+",
                            SourceId = 2,
                            Tagnumber = " 665",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1K1K6BB7PF185712",
                            Year = 2025
                        },
                        new
                        {
                            Id = 36,
                            Adas = true,
                            Finas = "W214-01098",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "E 350 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 666",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KLF4HB7RA000650",
                            Year = 2025
                        },
                        new
                        {
                            Id = 37,
                            Adas = true,
                            Finas = "X294-00461",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350 4MATIC",
                            SourceId = 2,
                            Tagnumber = " 668",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGGM1CB5PA000386",
                            Year = 2025
                        },
                        new
                        {
                            Id = 38,
                            Adas = true,
                            Finas = "X296-00322",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQS 450",
                            SourceId = 2,
                            Tagnumber = " 669",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "4JGDM2DB2PA000031",
                            Year = 2025
                        },
                        new
                        {
                            Id = 39,
                            Adas = true,
                            Finas = "V295-00503",
                            Location = "Tuscaloosa",
                            Make = "Mercedes",
                            Miles = 0,
                            Model = "EQE 350+",
                            SourceId = 2,
                            Tagnumber = "670",
                            TeleGeneration = "",
                            TruckDetail = 0,
                            TruckStatusId = 0,
                            UserId = "00000000-8c5a-4e0f-9d01-000000000000",
                            Vin = "W1KEG2BB5PF000620",
                            Year = 2025
                        });
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TruckDetail", b =>
                {
                    b.Property<int>("TruckDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("DetailTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TruckId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Vin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TruckDetailId");

                    b.HasIndex("TruckId");

                    b.ToTable("TruckDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserCarEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CarId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<int>("EventTypeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("EventTypeId");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("TeamTimelineId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("TEXT")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("TeamTimelineId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCarEvent", (string)null);
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("DetailId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("DetailId");

                    b.ToTable("UserDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEvent", b =>
                {
                    b.Property<int>("UserEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserCarEventId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserEventId");

                    b.HasIndex("EventId");

                    b.HasIndex("UserCarEventId");

                    b.HasIndex("UserId");

                    b.ToTable("UserEvents");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.YourSensorDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SensorData")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SensorData");
                });

            modelBuilder.Entity("CarModule", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModuleId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CarId1")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ModuleId1")
                        .HasColumnType("INTEGER");

                    b.HasKey("CarId", "ModuleId");

                    b.HasIndex("CarId1");

                    b.HasIndex("ModuleId");

                    b.HasIndex("ModuleId1");

                    b.ToTable("CarModule");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.ToTable("IdentityUserLogin<string>");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("IdentityUserRole<string>");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("IdentityUserToken<string>");
                });

            modelBuilder.Entity("PostTag", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTag");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEventDetail", b =>
                {
                    b.HasBaseType("BlazorApp1.CarModels.Detail");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserCarEventId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserEventDetailId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserEventId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasIndex("UserCarEventId");

                    b.HasIndex("UserEventId");

                    b.HasDiscriminator().HasValue("UserEventDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.NoteEventDetail", b =>
                {
                    b.HasBaseType("BlazorApp1.CarModels.UserEventDetail");

                    b.HasDiscriminator().HasValue("NoteEventDetail");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUser", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("BlazorApp1.CarModels.TeamTypes", null)
                        .WithMany("TeamMembers")
                        .HasForeignKey("TeamTypesTeamTypeId");

                    b.HasOne("BlazorApp1.CarModels.TestRelease", null)
                        .WithMany("Users")
                        .HasForeignKey("TestReleaseId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUserDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "ApplicationUser")
                        .WithOne("ApplicationUserDetail")
                        .HasForeignKey("BlazorApp1.CarModels.ApplicationUserDetail", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Car", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.TestRelease", null)
                        .WithMany("Cars")
                        .HasForeignKey("TestReleaseId");

                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CarDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithOne("CarDetail")
                        .HasForeignKey("BlazorApp1.CarModels.CarDetail", "CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Detail", null)
                        .WithMany("CarDetails")
                        .HasForeignKey("DetailId");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.CheckListItem", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.TestRelease", "TestRelease")
                        .WithMany()
                        .HasForeignKey("TestReleaseId");

                    b.Navigation("Car");

                    b.Navigation("TestRelease");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Detail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("BlazorApp1.CarModels.DetailType", "DetailType")
                        .WithMany("Details")
                        .HasForeignKey("DetailTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("DetailType");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.DetailType", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.TruckDetail", null)
                        .WithMany("DetailTypes")
                        .HasForeignKey("TruckDetailId");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.EntityAttributeValue", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Attribute", "Attribute")
                        .WithMany("EntityAttributeValues")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Entity", "Entity")
                        .WithMany("EntityAttributeValues")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Event", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("BlazorApp1.CarModels.EventType", "EventType")
                        .WithMany()
                        .HasForeignKey("EventTypeId");

                    b.HasOne("BlazorApp1.CarModels.Note", "Note")
                        .WithMany()
                        .HasForeignKey("NoteId");

                    b.HasOne("BlazorApp1.CarModels.SimpleEventType", "SimpleEventType")
                        .WithMany()
                        .HasForeignKey("SimpleEventTypeId");

                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "User")
                        .WithMany("Events")
                        .HasForeignKey("UserId");

                    b.Navigation("Category");

                    b.Navigation("EventType");

                    b.Navigation("Note");

                    b.Navigation("SimpleEventType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.EventDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Detail", null)
                        .WithMany("EventDetails")
                        .HasForeignKey("DetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ExcelDataRecordAttribute", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ExcelDataRecord", "ExcelDataRecord")
                        .WithMany("Attributes")
                        .HasForeignKey("ExcelDataRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExcelDataRecord");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ExcelDataRecordChange", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ExcelDataRecord", "ExcelDataRecord")
                        .WithMany("Changes")
                        .HasForeignKey("ExcelDataRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExcelDataRecord");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Logger", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithMany("Loggers")
                        .HasForeignKey("CarId");

                    b.HasOne("BlazorApp1.CarModels.NewCar", "NewCar")
                        .WithMany()
                        .HasForeignKey("NewCarId1");

                    b.HasOne("BlazorApp1.CarModels.Truck", "Truck")
                        .WithMany()
                        .HasForeignKey("TruckId");

                    b.Navigation("Car");

                    b.Navigation("NewCar");

                    b.Navigation("Truck");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.NewCar", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.OwnsOne("BlazorApp1.CarModels.CarStaticDetail", "CarStaticDetail", b1 =>
                        {
                            b1.Property<int?>("CarId")
                                .HasColumnType("INTEGER");

                            b1.Property<bool?>("Adas")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER")
                                .HasDefaultValueSql("(1)");

                            b1.Property<string>("Finas")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<int>("Id")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Tag")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Vin")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("CarId");

                            b1.ToTable("CarStaticDetail", (string)null);

                            b1.WithOwner("Car")
                                .HasForeignKey("CarId");

                            b1.Navigation("Car");
                        });

                    b.OwnsMany("BlazorApp1.CarModels.CarStatus", "CarStatus", b1 =>
                        {
                            b1.Property<int>("NewCarId")
                                .HasColumnType("INTEGER")
                                .HasColumnName("NewCarId");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<int>("StatusId")
                                .HasColumnType("INTEGER")
                                .HasColumnName("StatusId");

                            b1.Property<DateTime?>("StatusTime")
                                .HasColumnType("datetime");

                            b1.HasKey("NewCarId", "Id");

                            b1.HasIndex("StatusId");

                            b1.ToTable("CarStatuses");

                            b1.WithOwner("NewCar")
                                .HasForeignKey("NewCarId");

                            b1.HasOne("BlazorApp1.CarModels.Status", "Status")
                                .WithMany()
                                .HasForeignKey("StatusId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.Navigation("NewCar");

                            b1.Navigation("Status");
                        });

                    b.OwnsMany("BlazorApp1.CarModels.NewCarLogger", "NewCarLoggers", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER")
                                .HasColumnName("Id");

                            b1.Property<int?>("CarId")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("NewCarId")
                                .HasColumnType("INTEGER")
                                .HasColumnName("CardId");

                            b1.Property<int>("NumLoggers")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("TruckId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("TypeLogger")
                                .HasMaxLength(50)
                                .HasColumnType("INTEGER");

                            b1.HasKey("Id");

                            b1.HasIndex("CarId");

                            b1.HasIndex("NewCarId");

                            b1.HasIndex("TruckId");

                            b1.ToTable("NewCarLoggers");

                            b1.HasOne("BlazorApp1.CarModels.Car", "Car")
                                .WithMany()
                                .HasForeignKey("CarId");

                            b1.WithOwner("NewCar")
                                .HasForeignKey("NewCarId");

                            b1.HasOne("BlazorApp1.CarModels.Truck", "Truck")
                                .WithMany()
                                .HasForeignKey("TruckId");

                            b1.Navigation("Car");

                            b1.Navigation("NewCar");

                            b1.Navigation("Truck");
                        });

                    b.Navigation("CarStaticDetail");

                    b.Navigation("CarStatus");

                    b.Navigation("NewCarLoggers");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Note", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.NoteAttachment", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Note", "Note")
                        .WithMany("Attachments")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Note");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.NoteComment", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Note", "Note")
                        .WithMany("Comments")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Note");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.NoteTag", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Note", "Note")
                        .WithMany("Tags")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Note");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Order", b =>
                {
                    b.OwnsOne("BlazorApp1.CarModels.ShippingInfo", "ShippingInfo", b1 =>
                        {
                            b1.Property<int>("OrderId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.ToJson("ShippingInfo");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");

                            b1.OwnsMany("BlazorApp1.CarModels.Delivery", "Deliveries", b2 =>
                                {
                                    b2.Property<int>("ShippingInfoOrderId")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAddOrUpdate()
                                        .HasColumnType("INTEGER");

                                    b2.Property<DateTime>("DeliveryDate")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("ReceiverName")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("Signature")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.HasKey("ShippingInfoOrderId", "Id");

                                    b2.ToTable("Orders");

                                    b2.WithOwner()
                                        .HasForeignKey("ShippingInfoOrderId");
                                });

                            b1.OwnsMany("BlazorApp1.CarModels.Shipment", "Shipments", b2 =>
                                {
                                    b2.Property<int>("ShippingInfoOrderId")
                                        .HasColumnType("INTEGER");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAddOrUpdate()
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Carrier")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.Property<DateTime>("ShipDate")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("TrackingNumber")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.HasKey("ShippingInfoOrderId", "Id");

                                    b2.ToTable("Orders");

                                    b2.WithOwner()
                                        .HasForeignKey("ShippingInfoOrderId");
                                });

                            b1.Navigation("Deliveries");

                            b1.Navigation("Shipments");
                        });

                    b.Navigation("ShippingInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TaskModel", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TeamTimeline", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.TeamTypes", "Team")
                        .WithOne("TeamTimeline")
                        .HasForeignKey("BlazorApp1.CarModels.TeamTimeline", "TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Ticket", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "Assignee")
                        .WithMany()
                        .HasForeignKey("AssigneeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignee");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketAttachment", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Ticket", "Ticket")
                        .WithMany("Attachments")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketComment", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Ticket", "Ticket")
                        .WithMany("Comments")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketHistory", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Ticket", "Ticket")
                        .WithMany("History")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangedBy");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TicketTag", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Ticket", "Ticket")
                        .WithMany("Tags")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Truck", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.OwnsMany("BlazorApp1.CarModels.NewTruckLogger", "NewTruckLoggers", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER")
                                .HasColumnName("Id");

                            b1.Property<int?>("CarId")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("NewCarId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("NumLoggers")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("TruckId")
                                .HasColumnType("INTEGER")
                                .HasColumnName("TruckdId");

                            b1.Property<int>("TypeLogger")
                                .HasMaxLength(50)
                                .HasColumnType("INTEGER");

                            b1.HasKey("Id");

                            b1.HasIndex("CarId");

                            b1.HasIndex("NewCarId");

                            b1.HasIndex("TruckId");

                            b1.ToTable("NewTruckLoggers");

                            b1.HasOne("BlazorApp1.CarModels.Car", "Car")
                                .WithMany()
                                .HasForeignKey("CarId");

                            b1.HasOne("BlazorApp1.CarModels.NewCar", "NewCar")
                                .WithMany()
                                .HasForeignKey("NewCarId");

                            b1.WithOwner("Truck")
                                .HasForeignKey("TruckId");

                            b1.Navigation("Car");

                            b1.Navigation("NewCar");

                            b1.Navigation("Truck");
                        });

                    b.OwnsOne("BlazorApp1.CarModels.TruckStaticDetail", "TruckStaticDetail", b1 =>
                        {
                            b1.Property<int>("TruckId")
                                .HasColumnType("INTEGER");

                            b1.Property<bool?>("Adas")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER")
                                .HasDefaultValueSql("(1)");

                            b1.Property<string>("Finas")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Tag")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Vin")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("TruckId");

                            b1.ToTable("TruckStaticDetail", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("TruckId");
                        });

                    b.OwnsMany("BlazorApp1.CarModels.TruckStatus", "TruckStatus", b1 =>
                        {
                            b1.Property<int?>("TruckId")
                                .HasColumnType("INTEGER")
                                .HasColumnName("TruckId");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("StatusId")
                                .HasColumnType("INTEGER")
                                .HasColumnName("StatusId");

                            b1.Property<DateTime?>("StatusTime")
                                .HasColumnType("datetime");

                            b1.HasKey("TruckId", "Id");

                            b1.HasIndex("StatusId");

                            b1.ToTable("TruckStatus");

                            b1.HasOne("BlazorApp1.CarModels.Status", "Status")
                                .WithMany()
                                .HasForeignKey("StatusId");

                            b1.WithOwner("Truck")
                                .HasForeignKey("TruckId");

                            b1.Navigation("Status");

                            b1.Navigation("Truck");
                        });

                    b.Navigation("NewTruckLoggers");

                    b.Navigation("Source");

                    b.Navigation("TruckStaticDetail");

                    b.Navigation("TruckStatus");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TruckDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Truck", "Truck")
                        .WithMany("TruckDetails")
                        .HasForeignKey("TruckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Truck");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserCarEvent", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.EventType", "EventType")
                        .WithMany()
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.TeamTimeline", null)
                        .WithMany("Events")
                        .HasForeignKey("TeamTimelineId");

                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "User")
                        .WithMany("UserCarEvents")
                        .HasForeignKey("UserId");

                    b.Navigation("EventType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", null)
                        .WithMany("UserDetails")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("BlazorApp1.CarModels.Detail", null)
                        .WithMany("UserDetails")
                        .HasForeignKey("DetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEvent", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId");

                    b.HasOne("BlazorApp1.CarModels.UserCarEvent", null)
                        .WithMany("UserEvents")
                        .HasForeignKey("UserCarEventId");

                    b.HasOne("BlazorApp1.CarModels.ApplicationUser", "ApplicationUser")
                        .WithMany("UserEvents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("CarModule", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Car", null)
                        .WithMany("CarModules")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId1");

                    b.HasOne("BlazorApp1.CarModels.Module", null)
                        .WithMany("CarModules")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId1");

                    b.Navigation("Car");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("PostTag", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.Post", null)
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp1.CarModels.Tag", null)
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEventDetail", b =>
                {
                    b.HasOne("BlazorApp1.CarModels.UserCarEvent", null)
                        .WithMany("UserEventDetails")
                        .HasForeignKey("UserCarEventId");

                    b.HasOne("BlazorApp1.CarModels.UserEvent", "UserEvent")
                        .WithMany("UserEventDetails")
                        .HasForeignKey("UserEventId");

                    b.Navigation("UserEvent");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ApplicationUser", b =>
                {
                    b.Navigation("ApplicationUserDetail");

                    b.Navigation("Events");

                    b.Navigation("UserCarEvents");

                    b.Navigation("UserDetails");

                    b.Navigation("UserEvents");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Attribute", b =>
                {
                    b.Navigation("EntityAttributeValues");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Car", b =>
                {
                    b.Navigation("CarDetail");

                    b.Navigation("CarModules");

                    b.Navigation("Loggers");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Detail", b =>
                {
                    b.Navigation("CarDetails");

                    b.Navigation("EventDetails");

                    b.Navigation("UserDetails");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.DetailType", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Entity", b =>
                {
                    b.Navigation("EntityAttributeValues");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.ExcelDataRecord", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Changes");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Module", b =>
                {
                    b.Navigation("CarModules");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Note", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Comments");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Post", b =>
                {
                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Tag", b =>
                {
                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TeamTimeline", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TeamTypes", b =>
                {
                    b.Navigation("TeamMembers");

                    b.Navigation("TeamTimeline")
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TestRelease", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Ticket", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Comments");

                    b.Navigation("History");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.Truck", b =>
                {
                    b.Navigation("TruckDetails");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.TruckDetail", b =>
                {
                    b.Navigation("DetailTypes");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserCarEvent", b =>
                {
                    b.Navigation("UserEventDetails");

                    b.Navigation("UserEvents");
                });

            modelBuilder.Entity("BlazorApp1.CarModels.UserEvent", b =>
                {
                    b.Navigation("UserEventDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
